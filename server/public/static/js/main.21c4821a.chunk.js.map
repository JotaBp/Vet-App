{"version":3,"sources":["service/auth.service.js","components/ui/navbar/Navbar.js","components/pages/homePage/HomePage.js","service/file.service.js","components/pages/signup/Signup.js","components/pages/login/Login.js","service/cite.service.js","service/query.service.js","components/pages/cites/citesCard/CiteCard.js","components/pages/cites/citeResposeForm/CiteResponseForm.js","components/pages/query/queryCard/QueryCard.js","components/pages/cites/citesForm/CiteForm.js","components/pages/dashboard/dashboardHospital/DashboardHospital.js","service/profile.service.js","service/pet.service.js","components/pages/pets/petsForm/PetForm.js","components/pages/pets/updatePets/UpdateFormPets.js","components/pages/query/queryForm/QueryForm.js","components/pages/pets/petCardClient/PetCardClient.js","components/pages/dashboard/dashboardClient/DashboardClient.js","components/pages/profile/profileClient/ProfileClient.js","components/pages/pets/petsList/PetCard.js","components/pages/profile/profileHospital/ProfileHospital.js","components/App.js","index.js"],"names":["services","signup","username","email","password","role","service","post","login","logout","isLoggedIn","get","this","axios","create","baseURL","process","withCredentials","Navigation","props","setTheUser","authService","AuthService","bg","variant","expand","Brand","as","className","to","src","alt","Toggle","aria-controls","Collapse","id","Nav","Link","loggedInUser","onClick","Text","Component","HomePage","Container","Row","Col","lg","md","Figure","FigureImage","width","sm","Form","Group","controlId","Control","name","type","placeholder","Button","Services","handleUpload","theFile","handleUploadProfileImage","Signup","handleInputChange","e","signUpInfoCopy","state","signUpInfo","target","value","setState","handleSubmit","preventDefault","then","response","data","history","push","catch","err","console","log","profilePicPath","errorMessage","filesService","FileService","span","offset","onSubmit","Label","onChange","defaultValue","style","display","Login","loginInfoCopy","loginInfo","citeFromHospital","idHospital","citesFromPet","idPet","createCiteResponse","theCiteResponse","createCite","theCite","queryFromHospital","queryFromPet","queryCreate","theQuery","CitesCard","Card","Header","Body","Title","subject","Subtitle","date","description","CiteResponseForm","citeService","finishCiteResponsePost","queryObj","queryClient","_id","vetHospital","hospitalObj","CiteService","rows","closeModal","marginRight","QueryCard","handleModal","visible","modalShow","queryInfo","status","vetHospitalObj","petObj","pet","citeHospitalResponse","citeHospital","toast","show","text","Modal","onHide","CiteForm","displayPets","pets","map","finishCitePost","hospitalID","DashboardHospital","handletoast","toastCopy","getCitesInfo","userInfo","cites","getQueryInfo","queryService","querys","componentDidMount","finishCiteCreate","QueryService","cite","CiteCard","key","query","Toast","onClose","delay","getProfile","idUser","getOnlyVetHospital","getPetsFromClient","clientId","petCreate","thePet","getPetDetails","petId","editPet","updatedPet","deletePet","PetForm","getVetHospitals","hospitalsService","vetHospitals","displayHospitals","hospital","petCreated","petService","finishPetPost","handleFileUpload","uploadData","FormData","append","files","petPicPath","secure_url","species","breed","owner","ownerID","PetService","VetHospitalProfielService","UpdateFormPets","petUpdated","propsPetCardClient","finishUpdatePet","statePetCardClient","petInfo","QueryForm","hospitalArr","finishQueryCreate","PetCardClient","modalName","modal","getQuerysInfo","getPetDetailsInfo","handleDelete","reloadPets","finishQueryPost","finishUpdatedPetPost","displayModal","Img","size","ListGroup","Item","Footer","DashboardClient","idClient","finishPetCreate","idx","index","ProfileClient","getDetailsProfile","profileService","profileInfo","surname","address","phoneNumber","ProfileService","PetCard","xs","HospitalProfile","hospitalPicPath","chiefVetName","chiefVetSurname","collegiateNumber","App","userObj","fetchUser","path","exact","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.21c4821a.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default class services {\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}`,\n            withCredentials: true\n        })\n    }\n\n    signup = ({ username, email, password, role }) => this.service.post('/signup', { username, email, password, role })\n    login = ({ username, password }) => this.service.post('/login', { username, password })\n    logout = () => this.service.post('/logout')\n    isLoggedIn = () => this.service.get('/loggedin')\n}","import React, { Component } from 'react'\n\nimport './Navbar.css'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport AuthService from '../../../service/auth.service'\n\nimport { Link } from 'react-router-dom'\n\n\n\nclass Navigation extends Component {\n\n    constructor(props) {\n        super(props)\n        this.authService = new AuthService()\n    }\n\n    logout = () => {\n        this.props.setTheUser(false)\n        this.authService.logout()\n    }\n\n    render() {\n\n        return (\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\n                <Navbar.Brand as=\"div\" className=\"logo\">\n                    <Link to=\"/\">\n                        <img src=\"images/icono_veterinario.png\" alt=\"logo Vet-App\" />\n                    </Link>\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav>\n                        <Nav.Link as=\"div\"><Link to=\"/\" as=\"a\">Inicio</Link></Nav.Link>\n\n                        {\n                            !this.props.loggedInUser ?\n                                <>\n                                    <Nav.Link as=\"div\"><Link to=\"/login\" as=\"a\">Iniciar sesión</Link></Nav.Link>\n                                    <Nav.Link as=\"div\"><Link to=\"/signup\" as=\"a\">Registro</Link></Nav.Link>\n                                </>\n\n                                :\n                                <>\n                                    <Nav.Link as=\"div\"><Link to=\"/global\" as=\"a\">Posicion global</Link></Nav.Link>\n                                    <Nav.Link as=\"div\"><Link to=\"/profile\" as=\"a\">Perfil</Link></Nav.Link>\n                                    <Nav.Link as=\"div\" onClick={this.logout} >Cerrar sesión</Nav.Link>\n                                </>\n\n                        }\n\n                    </Nav>\n                    <Navbar.Text className=\"ml-auto\" as=\"div\"> Hola, {this.props.loggedInUser ? this.props.loggedInUser.username : 'invitad@'}</Navbar.Text>\n                </Navbar.Collapse>\n\n            </Navbar>\n        )\n    }\n\n}\n\nexport default Navigation","import React from 'react'\nimport './HomePage.css'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Figure from 'react-bootstrap/Figure'\nimport FigureImage from 'react-bootstrap/FigureImage'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\n\nconst HomePage = () => {\n    return (\n        <>\n\n            <Container as=\"section\" className=\"evolution\">\n\n                <Row className=\"justify-content-center\">\n                    <Col as=\"article\" lg={6} md={6}>\n\n\n                        <Figure>\n\n                            <FigureImage\n\n                                alt=\"Soluciones de gestion veterinaria\"\n                                src=\"images/ordenador.jpeg\"\n                            />\n\n                        </Figure>\n\n\n\n                    </Col>\n\n                    <Col as=\"article\"  lg={6} md={6} >\n                        <h1>Evoluciona</h1>\n\n                        <p>Vet App es el futuro de la gestión veterinaria.\n                        Deja de sufrir dificultades cuando puedes disfrutar del mejor software para centros veterinarios.\n                        Un programa on-line, fácil de manejar, intuitivo , que te ofrece todo lo que puedas imaginar y más.</p>\n\n                    </Col>\n\n                </Row>\n\n\n            </Container>\n\n            <Container as=\"section\" className=\"fast\">\n\n                <Row className=\"justify-content-center\">\n\n                    <Col as=\"article\"  lg={6} md={6}>\n\n                        <h2>Rápido y Sencillo</h2>\n                        <p>Vet App es tan intuitivo que aprenderás a manejarlo en minutos.\n                        Su interfaz está diseñada para que todos los procesos sean ágiles\n                        y la información llegue a ti de manera simple y bien estructurada.</p>\n\n                    </Col>\n                    <Col as=\"article\" lg={6} md={6}>\n\n                        <Figure>\n\n                            <FigureImage\n                                width={350}\n                                // height={180}\n                                alt=\"Veterinario hípico\"\n                                src=\"images/veterinario_caballos.jpg\"\n                            />\n\n                        </Figure>\n                    </Col>\n\n                </Row>\n\n\n            </Container>\n\n            <Container as=\"section\" className=\"secure\">\n\n                <Row className=\"justify-content-center\">\n                    <Col as=\"article\" lg={6} md={6}>\n\n\n                        <Figure>\n\n                            <FigureImage\n                                width={400}\n                                // height={180}\n                                alt=\"veterinaria pequeños animales\"\n                                src=\"images/veterinari_en_accion.jpg\"\n                            />\n\n                        </Figure>\n\n                    </Col>\n\n                    <Col as=\"article\" className=\"align-content\" lg={6} md={6}>\n\n                        <h2>Seguro y Fiable</h2>\n\n                        <p>Sabemos lo importante que es tu prestigio profesional y tu negocio.\n                        Puedes estar tranquilo en todo momento.\n                        Nuestra infraestructura de sistemas te liberan del mantenimiento.</p>\n\n                    </Col>\n\n                </Row>\n\n\n            </Container>\n\n            <Container as=\"section\" className=\"forYou\">\n\n                <Row className=\"justify-content-center\">\n\n                    <Col as=\"article\" lg={6} md={6}>\n\n                        <h2> Vet App es Para Ti </h2>\n\n                        <p>¡Confía en el mejor servicio de atención al cliente!\n                        El software de gestión mejor valorado por sus usuarios.\n                        Te acompañamos en cada paso hacia el éxito de tu negocio.</p>\n\n                    </Col>\n                    <Col as=\"article\" lg={6} md={6}>\n\n                        <img alt=\"\" />\n                        <Figure>\n\n                            <FigureImage\n                                width={300}\n                                // height={180}\n                                alt=\"Saludo de los veterinarios haciendo grupo\"\n                                src=\"images/grupo_veterinarios.jpeg\"\n                            />\n\n                        </Figure>\n\n                    </Col>\n\n                </Row>\n\n\n            </Container>\n\n            <Container as=\"footer\">\n\n                <Row className=\"justify-content-center\">\n                    <Col as=\"article\" lg={4} md={4} sm={4}>\n                        <Figure>\n\n                            <FigureImage\n                                width={100}\n                                // height={180}\n                                alt=\"icono e la marca Vet App\"\n                                src=\"images/icono_veterinario.png\"\n                            />\n\n                        </Figure>\n\n                        <p>Puedes encontrarnos en:\n                        Facebook\n                        YouTube\n                        Encontrarás tutoriales, novedades, ayuda y todo tipo de información útil.</p>\n\n                    </Col>\n\n                    <Col as=\"article\" lg={4} md={4} sm={4}>\n\n                        <p>Vet App es un software online de gestión de centros veterinarios\n                        totalmente orientado a conseguir que tu equipo pueda trabajar de una forma ágil y coordinada,\n                          abarcando todas las áreas y así ayudarte al exito de tu negocio.</p>\n\n                    </Col>\n\n                    <Col as=\"article\" lg={4} md={4} sm={4}>\n                        <Form  >\n                            <Form.Group controlId=\"email\">\n                                <Form.Control name=\"email\" type=\"email\" placeholder=\"Tu email\" />\n                            </Form.Group>\n                            <Form.Group controlId=\"phoneNumber\">\n                                <Form.Control name=\"phoneNumber\" type=\"text\" placeholder=\"Telefono de contacto\" />\n                            </Form.Group>\n                            <Form.Group controlId=\"message\">\n                                <Form.Control name=\"description\" type=\"text\" placeholder=\"Mensaje\" />\n                            </Form.Group>\n                            <Button variant=\"info\" type=\"submit\">Enviar</Button>\n\n                        </Form>\n\n                    </Col>\n\n                </Row>\n\n\n            </Container>\n\n\n\n        </>\n    )\n}\n\nexport default HomePage","import axios from 'axios'\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/files`,\n            withCredentials: true\n        })\n    }\n\n    handleUpload = theFile => this.service.post('/upload', theFile)\n    handleUploadProfileImage = theFile => this.service.post('/profileSignupUpload', theFile)\n}","import React, { Component } from 'react'\n\nimport AuthService from '../../../service/auth.service'\nimport FileService from '../../../service/file.service'\n\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport { Link } from 'react-router-dom'\n\n\nclass Signup extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            signUpInfo: {\n                username: '',\n                email: '',\n                password: '',\n                role: '',\n                profilePicPath: ''\n            },\n            errorMessage: ''\n        }\n        this.authService = new AuthService()\n        this.filesService = new FileService()\n\n    }\n\n\n    handleInputChange = e => {\n\n        let signUpInfoCopy = { ...this.state.signUpInfo }\n        const { name, value } = e.target\n        signUpInfoCopy = { ...signUpInfoCopy, [name]: value }\n\n        this.setState({ signUpInfo: signUpInfoCopy })\n    }\n    \n\n\n\n    handleSubmit = e => {\n        e.preventDefault()\n        \n        this.authService.signup(this.state.signUpInfo)\n            .then(response => {\n                this.props.setTheUser(response.data)\n                this.props.history.push('/')\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n\n\n\n\n    render() {\n\n        return (\n            <Container>\n\n                <Row>\n                    <Col md={{ span: 6, offset: 3 }}>\n\n                        <h3>Registro de usuario</h3>\n                        <hr></hr>\n                        <Form onSubmit={this.handleSubmit}>\n\n                            <Form.Group controlId=\"name\">\n                                <Form.Label>Usuario</Form.Label>\n                                <Form.Control name=\"username\" type=\"text\" value={this.state.username} onChange={this.handleInputChange} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"email\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control name=\"email\" type=\"email\" value={this.state.email} onChange={this.handleInputChange} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formBasicCheckbox\">\n                                <Form.Label>Que eres?</Form.Label>\n                                <Form.Control as=\"select\" name=\"role\" value={this.state.role} onChange={this.handleInputChange}>\n                                    <option defaultValue=\"GUEST\">Invitado</option>\n                                    <option value=\"VETHOSPITAL\">Hospital Veterinario</option>\n                                    <option value=\"CLIENT\">Mascotero</option>\n                                </Form.Control>\n                            </Form.Group>\n                            \n\n\n                            <Form.Group controlId=\"pwd\">\n                                <Form.Label>Contraseña</Form.Label>\n                                <Form.Control name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleInputChange} />\n                            </Form.Group>\n\n                            <p\n                                className='error-message'\n                                style={{ display: this.state.errorMessage ? 'block' : 'none' }}\n                            >{this.state.errorMessage}</p>\n\n                            <Button variant=\"dark\" type=\"submit\">Registrarme</Button>\n                        </Form>\n\n                        <p><small>¿Ya tienes cuenta? <Link to=\"/login\">Inicia sesión</Link></small></p>\n\n                    </Col>\n                </Row>\n\n            </Container>\n        )\n    }\n}\n\n\nexport default Signup\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react'\nimport AuthService from '../../../service/auth.service'\n\nimport './Login.css'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport { Link } from 'react-router-dom'\n\n\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loginInfo: {\n                username: '',\n                password: ''\n            },\n            errorMessage: ''\n        }\n        this.authService = new AuthService()\n    }\n\n\n    handleInputChange = e => {\n\n        let loginInfoCopy = { ...this.state.loginInfo }\n        const { name, value } = e.target\n        loginInfoCopy = { ...loginInfoCopy, [name]: value }\n\n        this.setState({ loginInfo: loginInfoCopy })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.authService.login(this.state.loginInfo)\n            .then(response => {\n                this.props.setTheUser(response.data)\n                this.props.history.push('/')\n            })\n            .catch(err => {\n               console.log(err)\n            })\n    }\n\n\n\n    render() {\n\n        return (\n            <Container>\n\n                <Row>\n                    <Col md={{ span: 4, offset: 4 }}>\n\n                        <h3>Inicio de sesión</h3>\n                        <hr></hr>\n                        <Form onSubmit={this.handleSubmit}>\n\n                            <Form.Group controlId=\"name\">\n                                <Form.Label>Usuario</Form.Label>\n                                <Form.Control name=\"username\" type=\"text\" value={this.state.username} onChange={this.handleInputChange} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"pwd\">\n                                <Form.Label>Contraseña</Form.Label>\n                                <Form.Control name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleInputChange} />\n                            </Form.Group>\n\n                            <p\n                                className='error-message'\n                                style={{ display: this.state.errorMessage ? 'block' : 'none' }}\n                            >{this.state.errorMessage}</p>\n\n                            <Button variant=\"dark\" type=\"submit\">Iniciar sesión</Button>\n                        </Form>\n\n                        <p><small>¿No tienes cuenta? <Link to=\"/signup\">Regístrate</Link></small></p>\n\n                    </Col>\n                </Row>\n\n            </Container>\n        )\n    }\n}\n\n\nexport default Login","import axios from 'axios'\n\nexport default class services {\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/cite`,\n            withCredentials: true\n        })\n    }\n\n    citeFromHospital = idHospital => this.service.get(`/citesFromHospital/${idHospital}`)\n    citesFromPet = idPet => this.service.get(`/citesFromPet/${idPet}`)\n    createCiteResponse = theCiteResponse => this.service.post(`/createCiteResponse`, theCiteResponse)\n    createCite = theCite => this.service.post(`/createCite`, theCite)\n}","import axios from 'axios'\n\nexport default class services {\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/query`,\n            withCredentials: true\n        })\n    }\n\n    queryFromHospital = idHospital => this.service.get(`/queryFromHospital/${idHospital}`)\n    queryFromPet = idPet => this.service.get(`/queryFromPet/${idPet}`)\n    queryCreate = theQuery => this.service.post(`/createQuery`, theQuery)\n\n}","import React from 'react'\nimport './CitesCard.css'\n\nimport Card from 'react-bootstrap/Card'\n\nconst CitesCard = (props) => {\n  return (\n    <Card as=\"article\" className=\"cite-card\">\n      <Card.Header as=\"h4\" className=\"header-cite-card\">Cita</Card.Header>\n      <Card.Body>\n        <Card.Title>{props.subject}</Card.Title>\n        <Card.Subtitle className=\"mb-2 text-muted\">{props.date}</Card.Subtitle>\n        <Card.Text as=\"p\" className=\"text-description\">\n          {props.description}\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default CitesCard","import React, { Component } from 'react'\nimport CiteService from '../../../../service/cite.service'\n\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\n\nclass CiteResponseForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            subject: this.props.queryObj.subject,\n            description: '',\n            queryClient: this.props.queryObj._id,\n            vetHospital: this.props.hospitalObj._id,\n        }\n        this.citeService = new CiteService()\n    }\n\n\n\n    handleInputChange = e => {\n        const { name, value } = e.target\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.citeService.createCiteResponse(this.state)\n            .then(() => this.props.finishCiteResponsePost())\n            .catch(err => console.log(err))\n    }\n\n\n    render() {\n        console.log(this.props)\n        return (\n            <Container>\n\n                <h1>Responder a la consulta</h1>\n                <hr></hr>\n                <Form onSubmit={this.handleSubmit}>\n\n                    <Form.Group controlId=\"desc\">\n                        <Form.Label>Descripcion</Form.Label>\n                        <Form.Control as=\"textarea\" rows=\"3\" name=\"description\"  value={this.state.description} onChange={this.handleInputChange} />\n                    </Form.Group>\n                    \n                    <Button variant=\"dark\" onClick={() => this.props.closeModal()} style={{ marginRight: '10px' }}>Cerrar</Button>\n                    <Button variant=\"dark\" type=\"submit\">Enviar</Button>\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default CiteResponseForm","import React, { Component } from 'react'\nimport './QueryCard.css'\n\nimport CiteService from '../../../../service/cite.service'\n\n\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport Modal from 'react-bootstrap/Modal'\n\nimport CiteResponseForm from '../../cites/citeResposeForm/CiteResponseForm'\n\nclass QueryCard extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n\n      queryInfo: {\n        status: this.props.status,\n        subject: this.props.subject,\n        date: this.props.date,\n        description: this.props.description,\n        vetHospitalObj: this.props.vetHospital,\n        petObj: this.props.pet,\n      },\n\n      citeHospitalResponse: {\n        description: this.props.citeHospital && this.props.citeHospital.description\n      },\n\n      toast: {\n        show: false,\n        text: ''\n      },\n      modalShow: false\n    }\n    this.citeService = new CiteService()\n\n  }\n\n  handleModal = visible => this.setState({ modalShow: visible })\n\n  finishCiteResponsePost = () => {\n    this.handleModal(false)\n  }\n\n\n  render() {\n    return (\n      <>\n        <Card as=\"article\" className=\"query-card\">\n          <Card.Header as=\"h4\" className=\"header-query-card\">Consulta</Card.Header>\n          <Card.Body as=\"body\">\n            <Card.Title as=\"h5\">{this.state.queryInfo.subject}</Card.Title>\n            <Card.Subtitle className=\"mb-2 text-muted\">{this.state.queryInfo.date}</Card.Subtitle>\n            <Card.Text as=\"p\">\n              {this.state.queryInfo.description}\n            </Card.Text>\n            <Card className=\"response-query-card\" style={{ display: this.state.citeHospitalResponse.description ? 'block' : 'none' }}>\n              <Card.Title as=\"h6\">Respuesta</Card.Title>\n              <Card.Text as=\"p\" className=\"response-query-card-text\">{this.state.citeHospitalResponse && this.state.citeHospitalResponse.description}</Card.Text>\n            </Card>\n            <Button onClick={() => this.handleModal(true)} variant=\"dark\" >Responder</Button>\n          </Card.Body>\n        </Card>\n\n        <Modal show={this.state.modalShow} onHide={() => this.handleModal(false)}>\n          <Modal.Body>\n            <CiteResponseForm finishCiteResponsePost={this.finishCiteResponsePost} hospitalObj={this.state.queryInfo.vetHospitalObj} petObj={this.state.queryInfo.petObj} queryObj={this.props} closeModal={() => this.handleModal(false)} />\n          </Modal.Body>\n        </Modal>\n\n      </>\n    )\n  }\n}\n\nexport default QueryCard","import React, { Component } from 'react'\n\nimport CiteService from '../../../../service/cite.service'\n\nimport './CiteForm.css'\n\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\n\nclass CiteForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            subject: '',\n            description: '',\n            date: '',\n            vetHospital: this.props.hospitalID,\n            pet: '',\n\n        }\n        this.citeService = new CiteService()\n    }\n\n    displayPets = e => {\n        return this.props.pets.map( pet=> <option value={pet._id}>{pet.name}</option>)\n    }\n\n\n    handleInputChange = e => {\n        const { name, value } = e.target\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.citeService.createCite(this.state)\n            .then(() => this.props.finishCitePost())\n            .catch(err => console.log(err))\n    }\n\n    \n    render() {\n        return (\n            <Container className=\"form-modal-window\">\n\n                <h1>Nueva Cita</h1>\n                <hr></hr>\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group controlId=\"asunto\">\n                        <Form.Label>Asunto</Form.Label>\n                        <Form.Control name=\"subject\" type=\"text\" value={this.state.subject} onChange={this.handleInputChange} />\n                    </Form.Group>\n                    <Form.Group controlId=\"desc\">\n                        <Form.Label>Descripcion</Form.Label>\n                        <Form.Control name=\"description\" type=\"text\" value={this.state.description} onChange={this.handleInputChange} />\n                    </Form.Group>\n                    <Form.Group controlId=\"date\">\n                        <Form.Label>Dia de la cita</Form.Label>\n                        <Form.Control name=\"date\" type=\"date\" value={this.state.date} onChange={this.handleInputChange} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"select-hospital\">\n                        <Form.Label>Selecciona mascota</Form.Label>\n                        <Form.Control as=\"select\" name=\"pet\" value={this.state.pet} onChange={this.handleInputChange} >\n                            <option>Seleccionar</option>\n                            {this.displayPets()}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button variant=\"dark\" onClick={() => this.props.closeModal()} style={{ marginRight: '10px' }}>Cerrar</Button>\n                    <Button variant=\"dark\" type=\"submit\">Nueva cita</Button>\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default CiteForm","import React, { Component } from 'react'\n\nimport CiteService from '../../../../service/cite.service'\nimport QueryService from '../../../../service/query.service'\n\nimport './DashboardHospital.css'\n\nimport CiteCard from '../../cites/citesCard/CiteCard'\nimport QueryCard from '../../query/queryCard/QueryCard'\nimport CiteForm from '../../cites/citesForm/CiteForm'\n\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Toast from 'react-bootstrap/Toast'\nimport Modal from 'react-bootstrap/Modal'\n\n\n\nclass DashboardHospital extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { \n            userInfo: {\n                id: this.props.loggedInUser._id\n            },\n                querys: \"\",\n                cites: \"\",\n            \n            toast: {\n                show: false,\n                text: ''\n            },\n            modalShow: false\n\n        }\n        this.citeService = new CiteService()\n        this.queryService = new QueryService()\n    }\n    \n    handleModal = visible => this.setState({ modalShow: visible })\n    handletoast = (visible, text = '') => {\n        const toastCopy = { ...this.state.toast }\n        toastCopy.show = visible\n        toastCopy.text = text\n        this.setState({ toast: toastCopy })\n    }\n    \n    getCitesInfo = () => {\n        this.citeService.citeFromHospital(this.state.userInfo.id)\n        .then(response => this.setState({ cites: response.data }))\n        .catch(err => console.log(err))\n    }\n\n    getQueryInfo = () => {\n        this.queryService.queryFromHospital(this.state.userInfo.id)\n        .then(response => this.setState({ querys: response.data }))\n        .catch(err => console.log(err))\n    }\n    \n    \n    componentDidMount = () => {\n        this.getCitesInfo()\n        this.getQueryInfo()\n    }\n\n    finishCiteCreate = () => {\n        this.getCitesInfo()\n        this.handleModal(false)\n        this.handletoast(true, 'Cita creada en BBDD')\n    }\n\n    \n\n    render() {\n\n\n\n        return (\n            <Container className=\"content-dashboard\">\n                <Container as=\"section\" >\n\n                         <Button onClick={() => this.handleModal(true)} variant=\"dark\" >Crear nueva cita</Button>\n\n\n                </Container>\n\n                <Container as=\"section\" >\n\n                <h1>Citas</h1>\n\n\n                    {this.state.cites && this.state.cites.map(cite =>  <CiteCard key={cite._id} {...cite} />)}\n\n\n                </Container>\n\n                <Container as=\"section\" >\n\n                <h1>Consultas</h1>\n\n\n                    {this.state.querys && this.state.querys.map(query => <QueryCard key={query._id} {...query} />)}\n\n\n                </Container>\n\n                <Modal className=\"modal-window\" show={this.state.modalShow} onHide={() => this.handleModal(false)}>\n                    <Modal.Body >\n                        <CiteForm  finishCitePost={this.finishCiteCreate} hospitalID={this.props.loggedInUser._id} pets={this.props.loggedInUser.pets} closeModal={() => this.handleModal(false)} />\n                    </Modal.Body>\n                </Modal>\n\n                <Toast className=\"tostada\" onClose={() => this.handletoast(false)} show={this.state.toast.show} delay={3000} >\n                    <Toast.Header>\n                        <strong className=\"mr-auto\">Mensaje</strong>\n                    </Toast.Header>\n                    <Toast.Body>{this.state.toast.text}</Toast.Body>\n                </Toast>\n            </Container>\n\n        )\n    }\n}\n\nexport default DashboardHospital","\nimport axios from 'axios'\n\nexport default class services {\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/profile`,\n            withCredentials: true\n        })\n    }\n\n    getProfile = (idUser) => this.service.get(`/${idUser}`)\n    getOnlyVetHospital = () => this.service.get(`/onlyVetHospital`)\n\n\n}","import axios from 'axios'\n\nexport default class services {\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/pet`,\n            withCredentials: true\n        })\n    }\n\n    getPetsFromClient = (clientId) => this.service.get(`/petsFromClient/${clientId}`)\n    petCreate = thePet => this.service.post(`/createPet`, thePet) \n    getPetDetails = petId => this.service.get(`/petDetails/${petId}`)  \n    editPet = (petId, updatedPet) => this.service.post(`/pet/${petId}/edit`, updatedPet)\n    deletePet = petId => this.service.post(`/pet/${petId}/delete`)\n\n}","import React, { Component } from 'react'\n\nimport VetHospitalProfielService from '../../../../service/profile.service'\nimport PetService from '../../../../service/pet.service'\nimport FileService from '../../../../service/file.service'\n\n\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\n\nclass PetForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            petCreated: {\n                name: '',\n                species: '',\n                petPicPath: '',\n                breed: '',\n                owner: this.props.ownerID,\n                vetHospital: ''\n            },\n            vetHospitals: null,\n\n        }\n        this.petService = new PetService()\n        this.filesService = new FileService()\n        this.hospitalsService = new VetHospitalProfielService()\n    }\n\n    getVetHospitals = () => {\n        this.hospitalsService.getOnlyVetHospital()\n            .then(response => {\n                return this.setState({ vetHospitals: response.data })})\n            .catch(err => console.log(err))\n    }\n\n\n    componentDidMount = () => {\n        this.getVetHospitals()\n    }\n\n    displayHospitals = () => {\n         this.state.vetHospitals && this.state.vetHospitals.map( hospital => {             \n            return (<option value={hospital._id}>{hospital.username}</option>)})\n    }\n\n    handleInputChange = e => {\n        const { name, value } = e.target\n\n        this.setState({\n           petCreated: { ...this.state.petCreated, [name]: value }\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.petService.petCreate(this.state.petCreated)\n            .then(() => this.props.finishPetPost())\n            .catch(err => console.log(err))\n    }\n\n    handleFileUpload = e => {\n\n        const uploadData = new FormData()\n        uploadData.append(\"petPicPath\", e.target.files[0])\n        this.filesService.handleUpload(uploadData)\n            .then(response => {\n                this.setState({\n                  petCreated:  {...this.state.petCreated, petPicPath: response.data.secure_url}\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    getVetHospitals = () => {\n        this.hospitalsService.getOnlyVetHospital()\n            .then(response => {\n                return this.setState({ vetHospitals: response.data })})\n            .catch(err => console.log(err))\n    }\n\n\n    componentDidMount = () => {\n        !this.state.vetHospitals && this.getVetHospitals() \n    }\n\n    displayHospitals = () => {\n         return this.state.vetHospitals && this.state.vetHospitals.map( hospital => {\n                     \n            return (<option value={hospital._id}>{hospital.username}</option>)})\n    }\n\n    render() {\n        if(!this.state.vetHospitals){\n            return <h1>Cargando...</h1>\n        }else{\n        return (\n            <Container>\n\n                <h1>Nueva Mascota</h1>\n                <hr></hr>\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group controlId=\"nombre\">\n                        <Form.Label>Nombre</Form.Label>\n                        <Form.Control name=\"name\" type=\"text\" value={this.state.petCreated.name} onChange={this.handleInputChange} />\n                    </Form.Group>\n                    <Form.Group controlId=\"especie\">\n                        <Form.Label>Especie</Form.Label>\n                        <Form.Control name=\"species\" type=\"text\" value={this.state.petCreated.species} onChange={this.handleInputChange} />\n                    </Form.Group>\n                    <Form.Group controlId=\"raza\">\n                        <Form.Label>Raza</Form.Label>\n                        <Form.Control name=\"breed\" type=\"text\" value={this.state.petCreated.breed} onChange={this.handleInputChange} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"select-hospital\">\n                        <Form.Label>Selecciona hospital</Form.Label>\n                        <Form.Control as=\"select\" name=\"vetHospital\" value={this.state.petCreated.vetHospital} onChange={this.handleInputChange} >\n                            <option>Seleccionar</option>\n                            {this.displayHospitals()}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"img\">\n                        <Form.Label>Foto de tu mascota</Form.Label>\n                        <Form.Control name=\"petPicPath\" type=\"file\" onChange={this.handleFileUpload} />\n                    </Form.Group>\n\n                    <Button variant=\"dark\" onClick={() => this.props.closeModal()}>Cerrar</Button>\n                    <Button variant=\"dark\" type=\"submit\">Nueva mascota</Button>\n                </Form>\n            </Container>\n        )\n    }\n\n}\n}\n\nexport default PetForm","import React, { Component } from 'react'\nimport './UpdateFormPets.css'\n\nimport VetHospitalProfielService from '../../../../service/profile.service'\nimport PetService from '../../../../service/pet.service'\nimport FileService from '../../../../service/file.service'\n\n\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass UpdateFormPets extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            petUpdated: {\n                name: this.props.statePetCardClient.petInfo.name,\n                species: this.props.statePetCardClient.petInfo.species,\n                petPicPath: this.props.statePetCardClient.petInfo.petPicPath,\n                breed: this.props.statePetCardClient.petInfo.breed,\n                owner: this.props.statePetCardClient.petInfo.owner._id,\n                vetHospital: this.props.statePetCardClient.petInfo.vetHospital[0]._id ? this.props.statePetCardClient.petInfo.vetHospital[0]._id : this.props.statePetCardClient.petInfo.vetHospital[0]._id = \"5ec698517f1ec422d7ec01d8\"\n            },\n            vetHospitals: null,\n\n        }\n        this.petService = new PetService()\n        this.filesService = new FileService()\n        this.hospitalsService = new VetHospitalProfielService()\n    }\n\n    handleInputChange = e => {\n        const { name, value } = e.target\n\n        this.setState({\n            petUpdated: { ...this.state.petUpdated, [name]: value }\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.petService.editPet(this.props.propsPetCardClient._id, this.state.petUpdated)\n            .then(() => this.props.finishUpdatePet())\n            .catch(err => console.log(err))\n    }\n\n    handleFileUpload = e => {\n\n        const uploadData = new FormData()\n        uploadData.append(\"petPicPath\", e.target.files[0])\n        this.filesService.handleUpload(uploadData)\n            .then(response => {\n                this.setState({\n                    petUpdated: { ...this.state.petUpdated, petPicPath: response.data.secure_url }\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    getVetHospitals = () => {\n        this.hospitalsService.getOnlyVetHospital()\n            .then(response => this.setState({ vetHospitals: response.data }))\n            .catch(err => console.log(err))\n    }\n\n\n    displayHospitals = () => {\n        this.state.vetHospitals && this.state.vetHospitals.map(hospital => {\n            return (<option value={hospital._id}>{hospital.username}</option>)\n        })\n    }\n\n\n    componentDidMount = () => {\n        this.getVetHospitals()\n    }\n\n\n\n    render() {\n\n\n\n        if (!this.state.vetHospitals) {\n            return <h1>Cargando...</h1>\n        } else {\n            return (\n                <Container>\n\n                    <h1>Actualizar Mascota</h1>\n                    <hr></hr>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group controlId=\"nombre\">\n                            <Form.Label>Nombre</Form.Label>\n                            <Form.Control name=\"name\" type=\"text\" value={this.state.petUpdated.name} onChange={this.handleInputChange} />\n                        </Form.Group>\n                        <Form.Group controlId=\"especie\">\n                            <Form.Label>Especie</Form.Label>\n                            <Form.Control name=\"species\" type=\"text\" value={this.state.petUpdated.species} onChange={this.handleInputChange} />\n                        </Form.Group>\n                        <Form.Group controlId=\"raza\">\n                            <Form.Label>Raza</Form.Label>\n                            <Form.Control name=\"breed\" type=\"text\" value={this.state.petUpdated.breed} onChange={this.handleInputChange} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"select-hospital\">\n                            <Form.Label>Selecciona hospital</Form.Label>\n                            <Form.Control as=\"select\" name=\"vetHospital\" value={this.state.petUpdated.vetHospital} onChange={this.handleInputChange} >\n                                <option value={this.state.petUpdated.vetHospital._id}>{this.state.petUpdated.vetHospital.username}</option>\n                                {this.state.vetHospitals && this.state.vetHospitals.map(hospital => {\n                                    return (<option key={hospital._id} value={hospital._id}>{hospital.username}</option>)\n                                })}\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"img\">\n                            <Form.Label>Foto de tu mascota</Form.Label>\n                            <Form.Control name=\"petPicPath\" type=\"file\" onChange={this.handleFileUpload} />\n                        </Form.Group>\n                        <Button variant=\"dark\" type=\"submit\">Actualizar mascota</Button>\n                        <Button variant=\"dark\" onClick={() => this.props.closeModal()}>Cerrar</Button>\n\n                    </Form>\n\n                </Container>\n            )\n        }\n    }\n}\n\nexport default UpdateFormPets\n","import React, { Component } from 'react'\n\nimport QueryService from '../../../../service/query.service'\n\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\n\nclass QueryForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            subject: '',\n            description: '',\n            date: '',\n            pet: this.props.petId,\n            vetHospital: '',\n\n        }\n        this.queryService = new QueryService()\n    }\n\n    displayHospitals = () => {\n        return this.props.hospitalArr.map(hospital => {\n            return (<option key={hospital._id} value={hospital._id}>{hospital.username}</option>)\n        })\n    }\n\n    handleInputChange = e => {\n        const { name, value } = e.target\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.queryService.queryCreate(this.state)\n            .then(() => this.props.finishQueryCreate())\n            .catch(err => console.log(err))\n    }\n\n    render() {\n\n        return (\n            <Container>\n\n                <h1>Nueva Consulta</h1>\n                <hr></hr>\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group controlId=\"asunto\">\n                        <Form.Label>Asunto</Form.Label>\n                        <Form.Control name=\"subject\" type=\"text\" value={this.state.subject} onChange={this.handleInputChange} />\n                    </Form.Group>\n                    <Form.Group controlId=\"desc\">\n                        <Form.Label>Descripcion</Form.Label>\n                        <Form.Control name=\"description\" type=\"text\" value={this.state.description} onChange={this.handleInputChange} />\n                    </Form.Group>\n                    <Form.Group controlId=\"date\">\n                        <Form.Label>Fecha</Form.Label>\n                        <Form.Control name=\"date\" type=\"date\" value={this.state.date} onChange={this.handleInputChange} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"select-hospital\">\n                        <Form.Label>Selecciona hospital</Form.Label>\n                        <Form.Control as=\"select\" name=\"vetHospital\" value={this.state.vetHospital} onChange={this.handleInputChange} >\n                            <option>Seleccionar</option>\n                            {this.displayHospitals()}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button variant=\"dark\" onClick={() => this.props.closeModal()} style={{ marginRight: '10px' }}>Cerrar</Button>\n                    <Button variant=\"dark\" type=\"submit\">Nueva consulta</Button>\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default QueryForm","import React, { Component } from 'react'\n\nimport './PetCardClient.css'\n\nimport CiteService from '../../../../service/cite.service'\nimport QueryService from '../../../../service/query.service'\nimport PetService from '../../../../service/pet.service'\n\nimport UpdateFormPets from '../updatePets/UpdateFormPets'\nimport QueryForm from '../../query/queryForm/QueryForm'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Modal from 'react-bootstrap/Modal'\nimport Toast from 'react-bootstrap/Toast'\n\n\nclass PetCardClient extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n\n            petInfo: {\n                id: this.props._id,\n                petPicPath: this.props.petPicPath,\n                name: this.props.name,\n                species: this.props.species,\n                breed: this.props.breed,\n                vetHospital: this.props.vetHospital,\n                owner: this.props.owner\n\n            },\n            cites: \"\",\n            querys: \"\",\n\n\n            toast: {\n                show: false,\n                text: ''\n            },\n            modal: {\n                show: false,\n                name: ''\n            }\n\n        }\n        this.citeService = new CiteService()\n        this.queryService = new QueryService()\n        this.petService = new PetService()\n\n    }\n\n\n    handleModal = (visible, modalName) => {\n        this.setState({ modal: { show: visible, name: modalName } })}\n\n    handletoast = (visible, text = '') => {\n        const toastCopy = { ...this.state.toast }\n        toastCopy.show = visible\n        toastCopy.text = text\n        this.setState({ toast: toastCopy })\n    }\n\n    getQuerysInfo = () => {\n        this.queryService.queryFromPet(this.props._id)\n            .then(response => {\n                return this.setState({ querys: response.data })\n            })\n            .catch(err => console.log(err))\n    }\n\n    getCitesInfo = () => {\n        this.citeService.citesFromPet(this.props._id)\n            .then(response => this.setState({ cites: response.data }))\n            .catch(err => console.log(err))\n    }\n\n    getPetDetailsInfo = () => {\n        this.petService.getPetDetails(this.props._id)\n            .then(response => this.setState({ petInfo: response.data }))\n            .catch(err => console.log(err))\n    }\n\n    handleDelete = (petId) => {\n        this.petService.deletePet(petId)\n            .then(() => this.props.reloadPets())\n            .catch(err => console.log(err))\n    }\n\n    finishQueryPost = () => {\n        this.getQuerysInfo()\n        this.handleModal(false)\n        this.handletoast(true, 'Consulta enviada al Hospital')\n    }\n\n    finishUpdatedPetPost = () => {\n        this.getPetDetailsInfo()\n        this.handleModal(false)\n        this.handletoast(true, 'Has actualizado la mascota')\n\n    }\n\n    componentDidMount = () => {\n        this.getQuerysInfo()\n        this.getCitesInfo()\n    }\n\n\n    displayModal = (modalName) => {\n        if (this.state.modal.show) {\n            switch (modalName) {\n                case \"createQuery\":\n                    return (\n                        <Modal.Body>\n                            <QueryForm\n                                finishQueryCreate={this.finishQueryPost}\n                                petId={this.state.petInfo.id}\n                                hospitalArr={this.props.vetHospital}\n                                closeModal={() => this.handleModal(false)} />\n                        </Modal.Body>\n                    )\n                case \"editPet\":\n                    return (\n                        <Modal.Body>\n                            <UpdateFormPets\n                                propsPetCardClient={this.props}\n                                statePetCardClient={this.state}\n                                finishUpdatePet={this.finishUpdatedPetPost}\n                                closeModal={() => this.handleModal(false)}\n\n                            />\n                        </Modal.Body>\n\n                    )\n                default:\n                    return null\n            }\n        }\n    }\n\n    render() {\n        console.log(this.props.vetHospital)\n\n\n        return (\n            <>\n                <Container as=\"section\">\n\n\n                    <Row>\n                        <Col as=\"article\">\n                            <Card className=\"card\">\n                                <Card.Img variant=\"top\" src={this.state.petInfo.petPicPath} />\n\n                                <Card.Header as=\"h5\">{this.state.petInfo.name}</Card.Header>\n                                <Button className=\"delete-button\" onClick={() => this.handleDelete(this.state.petInfo.id)} variant=\"danger\" size=\"md\">Eliminar mascota</Button>\n\n                                <ListGroup className=\"list-group-flush\">\n                                    <ListGroup.Item>{this.state.petInfo.species}</ListGroup.Item>\n                                    <ListGroup.Item>{this.state.petInfo.breed}</ListGroup.Item>\n                                    <ListGroup.Item>Hospital de referencia: {this.state.petInfo.vetHospital[0] && this.state.petInfo.vetHospital[0].username}</ListGroup.Item>\n                                </ListGroup>\n\n                                <h4 className=\"query\" >Consultas</h4>\n\n                                {this.state.querys && this.state.querys.map(query => {\n\n\n                                    return (\n\n                                        <Card.Body className=\"body\" key={query._id}>\n                                            <Card.Title>{query.subject}</Card.Title>\n                                            <Card.Subtitle>{query.date}</Card.Subtitle>\n                                            <Card.Text as=\"p\" className=\"card-text\">{query.description}</Card.Text>\n                                            {query.citeHospital && <Card style={{ display: query.citeHospital.description ? 'block' : 'none' }}>\n\n                                                <Card.Title as=\"h5\" className=\"card-title-response\">Respuesta</Card.Title>\n                                                <Card.Text as=\"p\" className=\"card-text-response\">{query.citeHospital.description}</Card.Text>\n\n                                            </Card>}\n                                        </Card.Body>\n                                    )\n                                })}\n\n                                <h4 className=\"cite\">Citas</h4>\n\n                                {this.state.cites && this.state.cites.map(cite => {\n\n\n                                    return (\n                                        <Card.Body className=\"body\" key={cite._id}>\n                                            <Card.Title>{cite.subject}</Card.Title>\n                                            <Card.Subtitle>{cite.date}</Card.Subtitle>\n                                            <Card.Text as=\"p\" className=\"card-text\">{cite.description}</Card.Text>\n                                        </Card.Body>\n                                    )\n                                })}\n\n\n                                <Card.Footer>\n                                    <Button onClick={() => this.handleModal(true, \"createQuery\")} variant=\"dark\" >Crear Consulta para {this.state.petInfo.name}</Button>\n                                    <Button onClick={() => this.handleModal(true, \"editPet\")} variant=\"dark\" >Actualizar mascota {this.state.petInfo.name}</Button>\n\n\n                                </Card.Footer>\n                            </Card>\n\n                        </Col>\n\n                    </Row>\n\n                </Container>\n\n                <Modal show={this.state.modal.show} onHide={() => this.handleModal(false)}>\n                    {this.displayModal(this.state.modal.name)}\n                </Modal>\n\n                <Toast className=\"toast-window\" onClose={() => this.handletoast(false)} show={this.state.toast.show} delay={3000} >\n                    <Toast.Header>\n                        <strong className=\"mr-auto\">Mensaje</strong>\n                    </Toast.Header>\n                    <Toast.Body>{this.state.toast.text}</Toast.Body>\n                </Toast>\n\n            </>\n        )\n    }\n}\n\nexport default PetCardClient\n\n\n\n","import React, { Component } from 'react'\n\nimport './DashboardCliente.css'\n\nimport PetForm from '../../pets/petsForm/PetForm'\n\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Toast from 'react-bootstrap/Toast'\nimport Modal from 'react-bootstrap/Modal'\n\nimport PetCardClient from '../../pets/petCardClient/PetCardClient'\n\nimport PetService from '../../../../service/pet.service'\n\n\nclass DashboardClient extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            userInfo: {\n                id: this.props.loggedInUser._id,\n                pets: []\n            },\n            toast: {\n                show: false,\n                text: ''\n            },\n            modalShow: false,\n\n        }\n\n        this.petService = new PetService()\n\n\n    }\n\n    handleModal = visible => {\n        console.log(`esto es el handlemodal ${visible}`)\n        this.setState({ modalShow: visible })\n    }\n\n    handletoast = (visible, text = '') => {\n        const toastCopy = { ...this.state.toast }\n        toastCopy.show = visible\n        toastCopy.text = text\n        this.setState({ toast: toastCopy })\n    }\n\n    getPetsFromClient = (idClient) => {\n        this.petService.getPetsFromClient(idClient)\n            .then(response =>  this.setState({ userInfo: { ...this.state.userInfo, pets: response.data } }))\n            .catch(err => console.log(err))\n    }\n\n    finishPetCreate = () => {\n        this.getPetsFromClient(this.props.loggedInUser._id)\n        this.handleModal(false)\n        this.handletoast(true, 'Has creado una nueva mascota')\n    }\n\n    componentDidMount = () => {\n        this.getPetsFromClient(this.props.loggedInUser._id)\n    }\n\n\n    render() {\n\n        return (\n            <>\n\n                <Container as=\"section\" className=\"content-dashboard\">\n\n                    <Button onClick={() => this.handleModal(true)} variant=\"dark\">Crear nueva mascota</Button>\n\n                    <Toast className=\"toast-window\" onClose={() => this.handletoast(false)} show={this.state.toast.show} delay={3000} >\n                        <Toast.Header>\n\n                            <strong className=\"mr-auto\">Mensaje</strong>\n                        </Toast.Header>\n                        <Toast.Body>{this.state.toast.text}</Toast.Body>\n                    </Toast>\n\n\n                    {this.state.userInfo.pets && this.state.userInfo.pets.map((pet, idx) =>{\n\n                        return (<PetCardClient\n                            index= {idx}\n                            key={pet._id} {...pet}\n                            reloadPets={() => this.getPetsFromClient(this.state.userInfo.id)}\n\n                        />)\n                        })}\n\n                </Container>\n\n                <Modal className=\"modal-window\" show={this.state.modalShow} onHide={() => this.handleModal(false)}>\n                    <Modal.Body>\n                        <PetForm finishPetPost={this.finishPetCreate} ownerID={this.props.loggedInUser._id} closeModal={() => this.handleModal(false)} />\n                    </Modal.Body>\n                </Modal>\n\n\n\n\n\n            </>\n\n        )\n    }\n}\n\nexport default DashboardClient","import React, { Component } from 'react'\n\nimport './ProfileClient.css'\n\nimport ProfileService from '../../../../service/profile.service'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Figure from 'react-bootstrap/Figure'\nimport FigureImage from 'react-bootstrap/FigureImage'\n\nimport Card from 'react-bootstrap/Card'\n\nclass ProfileClient extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            profileInfo: {\n                id: this.props.loggedInUser._id,\n                username: '',\n                surname: '',\n                email: '',\n                password: '',\n                profilePicPath: '',\n                address: '',\n                phoneNumber: '',\n                status: '',\n                pets: [],\n                queryClient: [],\n                citeHospital: []\n            },\n            toast: {\n                show: false,\n                text: ''\n            },\n            modalShow: false,\n            errorMessage: ''\n        }\n        this.profileService = new ProfileService()\n    }\n\n    getDetailsProfile = () => {\n        this.profileService.getProfile(this.state.profileInfo.id)\n            .then(response => this.setState({ profileInfo: response.data }))\n            .catch(err => console.log(err))\n    }\n\n    componentDidMount = () => {\n        this.getDetailsProfile()\n    }\n\n    render() {\n\n        return (\n\n            <Container as=\"section\" className=\"container-profile\">\n                <Row>\n                    <Col as=\"article\">\n                        <h1>Perfil</h1>\n\n                        <Figure className=\"img-profile\">\n\n                            <FigureImage\n\n                                alt=\"Foto de perfil del usuario\"\n                                src={this.state.profileInfo.profilePicPath}\n                            />\n\n                        </Figure>\n                    </Col>\n                    <Col as=\"article\">\n\n                        <Card className=\"profile-card-client\">\n                            <Card.Header>Hola {this.state.profileInfo.username} este es tu perfil de usuario:</Card.Header>\n                            <Card.Body>\n                                <Card.Subtitle as=\"h5\">Email de contacto:</Card.Subtitle>\n                                <Card.Text as=\"p\">{this.state.profileInfo.email}</Card.Text>\n                                <Card.Subtitle as=\"h5\">Domicilio:</Card.Subtitle>\n                                <Card.Text as=\"p\">{this.state.profileInfo.address}</Card.Text>\n                                <Card.Subtitle as=\"h5\">Telefono de contact:</Card.Subtitle>\n                                <Card.Text as=\"p\">{this.state.profileInfo.phoneNumber}</Card.Text>\n                                <Card.Subtitle as=\"h5\">Estado de la cuenta:</Card.Subtitle>\n                                <Card.Text as=\"p\">{this.state.profileInfo.status}</Card.Text>\n                            </Card.Body>\n\n                        </Card>\n                    </Col>\n                </Row>\n\n            </Container>\n\n\n        )\n    }\n}\n\nexport default ProfileClient","import React from 'react'\n\nimport './PetCard.css'\n\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nconst PetCard = props => {\n    return (\n\n        <Col xs={12} md={6} lg={4} as=\"article\">\n            <Card >\n                <Card.Img variant=\"top\" src={props.petPicPath} />\n                <Card.Header>\n                    <Card.Title>{props.name}</Card.Title>\n                </Card.Header>\n                <Card.Body>\n                    <Card.Text className=\"text-pet-card\">{props.breed}</Card.Text>\n                </Card.Body>\n\n                <ListGroup>\n                    <ListGroup.Item variant=\"dark\">{props.species}</ListGroup.Item>\n                </ListGroup>\n            </Card>\n        </Col>\n\n    )\n}\n\nexport default PetCard","import React, { Component } from 'react'\n\nimport './ProfileHospital.css'\n\nimport ProfileService from '../../../../service/profile.service'\n\nimport PetCard from '../../pets/petsList/PetCard'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Figure from 'react-bootstrap/Figure'\nimport FigureImage from 'react-bootstrap/FigureImage'\n\nimport Card from 'react-bootstrap/Card'\n\nclass HospitalProfile extends Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            profileInfo: {\n                id: this.props.loggedInUser._id,\n                username: '',\n                surname: '',\n                email: '',\n                password: '',\n                hospitalPicPath: '',\n                address: '',\n                phoneNumber: '',\n                status: '',\n                chiefVetName: '',\n                chiefVetSurname: '',\n                collegiateNumber: '',\n                pets: [],\n                queryClient: [],\n                citeHospital: []\n            },\n            toast: {\n                show: false,\n                text: ''\n            },\n            modalShow: false,\n            errorMessage: ''\n        }\n        this.profileService = new ProfileService()\n    }\n\n\n\n\n    getDetailsProfile = () => {\n        this.profileService.getProfile(this.state.profileInfo.id)\n            .then(response => this.setState({ profileInfo: response.data }))\n            .catch(err => console.log(err))\n    }\n\n\n    componentDidMount = () => {\n        this.getDetailsProfile()\n    }\n\n\n\n    render() {\n\n        return (\n\n            <>\n                <Container>\n\n                    <Row>\n                        <Col>\n\n                            <h1>Perfil de Hospital</h1>\n\n                            <Figure>\n\n                                <FigureImage\n\n                                    alt=\"Foto de perfil del usuario\"\n                                    src={this.state.profileInfo.hospitalPicPath}\n                                />\n\n                            </Figure>\n                        </Col>\n                        <Col>\n\n                            <Card className=\"profile-card-hospital\">\n                                <Card.Header>Hola {this.state.profileInfo.username} este es tu perfil de usuario:</Card.Header>\n                                <Card.Body>\n                                    <Card.Subtitle as=\"h5\">Email de contacto:</Card.Subtitle>\n                                    <Card.Text as=\"p\">{this.state.profileInfo.email}</Card.Text>\n                                    <Card.Subtitle as=\"h5\">Domicilio:</Card.Subtitle>\n                                    <Card.Text as=\"p\">{this.state.profileInfo.address}</Card.Text>\n                                    <Card.Subtitle as=\"h5\">Telefono de contacto:</Card.Subtitle>\n                                    <Card.Text as=\"p\">{this.state.profileInfo.phoneNumber}</Card.Text>\n                                    <Card.Subtitle as=\"h5\">Estado de la cuenta:</Card.Subtitle>\n                                    <Card.Text as=\"p\">{this.state.profileInfo.status}</Card.Text>\n                                </Card.Body>\n                            </Card>\n\n                        </Col>\n\n\n                    </Row>\n\n                </Container>\n\n                <Container>\n                    <h1>Clientes del hospital</h1>\n                    <Row>\n                        {this.state.profileInfo.pets && this.state.profileInfo.pets.map(pet => <PetCard key={pet._id} {...pet} />)}\n                    </Row>\n                </Container>\n\n            </>\n        )\n    }\n\n}\n\nexport default HospitalProfile\n\n","import React, { Component } from 'react'\n\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\nimport Navigation from './ui/navbar/Navbar'\nimport HomePage from './pages/homePage/HomePage'\nimport Signup from './pages/signup/Signup'\nimport Login from './pages/login/Login'\nimport DashboardHospital from './pages/dashboard/dashboardHospital/DashboardHospital'\nimport DashboardClient from './pages/dashboard/dashboardClient/DashboardClient';\nimport ProfileClient from './pages/profile/profileClient/ProfileClient'\nimport ProfileHospital from './pages/profile/profileHospital/ProfileHospital' //Este no está terminado\n\nimport AuthService from '../service/auth.service'\n\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = { loggedInUser: null }\n    this.authService = new AuthService()\n  }\n\n  setTheUser = userObj => this.setState({ loggedInUser: userObj })\n\n  fetchUser = () => {\n    if (this.state.loggedInUser === null) {\n      this.authService.isLoggedIn()\n        .then(response => this.setTheUser(response.data))\n        .catch(() => this.setTheUser(false))\n    }\n  }\n\n\n  render() {\n\n    this.fetchUser()\n\n    return (\n      <>\n        <Navigation setTheUser={this.setTheUser} loggedInUser={this.state.loggedInUser} />\n\n        <main>\n\n          <Switch>\n            <Route path=\"/\" exact render={() => <HomePage />} />\n            <Route path=\"/signup\" render={props => <Signup {...props} setTheUser={this.setTheUser} />} />\n            <Route path=\"/login\" render={props => <Login {...props} setTheUser={this.setTheUser} />} />\n\n            <Route path=\"/global\" render={props => {\n\n              if (this.state.loggedInUser && this.state.loggedInUser.role === \"VETHOSPITAL\") {\n\n                return (<DashboardHospital {...props} loggedInUser={this.state.loggedInUser} />)\n              }\n\n              else if (this.state.loggedInUser && this.state.loggedInUser.role === \"CLIENT\") {\n\n                return (<DashboardClient {...props} loggedInUser={this.state.loggedInUser} />)\n              }\n\n              else {\n\n                return (<Redirect to=\"/login\" />)\n              }\n\n            }} />\n\n\n            <Route path=\"/profile\" render={props => {\n\n              if (this.state.loggedInUser && this.state.loggedInUser.role === \"VETHOSPITAL\") {\n\n                return (<ProfileHospital {...props} loggedInUser={this.state.loggedInUser} />)\n              }\n\n              else if (this.state.loggedInUser && this.state.loggedInUser.role === \"CLIENT\") {\n\n                return (<ProfileClient {...props} loggedInUser={this.state.loggedInUser} />)\n              }\n\n              else { return (<Redirect to=\"/login\" />) }\n            }} />\n\n          </Switch>\n\n        </main>\n      </>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)"],"sourceRoot":""}