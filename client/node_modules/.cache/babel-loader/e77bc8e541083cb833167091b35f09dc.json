{"ast":null,"code":"var _jsxFileName = \"/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/pets/updatePets/UpdateFormPets.js\";\nimport React, { Component } from 'react';\nimport './UpdateFormPets.css';\nimport VetHospitalProfielService from '../../../../service/profile.service';\nimport PetService from '../../../../service/pet.service';\nimport FileService from '../../../../service/file.service';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass UpdateFormPets extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        petUpdated: { ...this.state.petUpdated,\n          [name]: value\n        }\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.petService.editPet(this.props.propsPetCardClient._id, this.state.petUpdated) // .then(() => this.props.finishUpdatePet())\n      .then(response => {\n        console.log('este es el handlecubmit'); // console.log(response)\n        // console.log(this.props)\n\n        this.props.finishUpdatePet(); //  this.props.updatePetInfo(response.data, this.props.index)\n      }).catch(err => console.log(err));\n    };\n\n    this.handleFileUpload = e => {\n      const uploadData = new FormData();\n      uploadData.append(\"petPicPath\", e.target.files[0]);\n      this.filesService.handleUpload(uploadData).then(response => {\n        this.setState({\n          petUpdated: { ...this.state.petUpdated,\n            petPicPath: response.data.secure_url\n          }\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.getVetHospitals = () => {\n      this.hospitalsService.getOnlyVetHospital().then(response => this.setState({\n        vetHospitals: response.data\n      })).catch(err => console.log(err));\n    };\n\n    this.displayHospitals = () => {\n      this.state.vetHospitals && this.state.vetHospitals.map(hospital => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: hospital._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }\n        }, hospital.username);\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.getVetHospitals();\n    };\n\n    this.state = {\n      petUpdated: {\n        //Revisar los nombres de las props\n        name: this.props.statePetCardClient.petInfo.name,\n        species: this.props.statePetCardClient.petInfo.species,\n        petPicPath: this.props.statePetCardClient.petInfo.petPicPath,\n        breed: this.props.statePetCardClient.petInfo.breed,\n        owner: this.props.statePetCardClient.petInfo.owner._id,\n        vetHospital: !this.props.statePetCardClient.petInfo.vetHospital[0]._id ? \" \" : this.props.statePetCardClient.petInfo.vetHospital[0]._id // En el back tengo que hacer un finbyid del nuevo id del hospital que se actualizce\n\n      },\n      vetHospitals: null\n    };\n    this.petService = new PetService();\n    this.filesService = new FileService();\n    this.hospitalsService = new VetHospitalProfielService();\n  }\n\n  render() {\n    if (!this.state.vetHospitals) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 20\n        }\n      }, \"Cargando...\");\n    } else {\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, \"Actualizar Mascota\"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"nombre\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }\n      }, \"Nombre\"), /*#__PURE__*/React.createElement(Form.Control, {\n        name: \"name\",\n        type: \"text\",\n        value: this.state.petUpdated.name,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"especie\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }\n      }, \"Especie\"), /*#__PURE__*/React.createElement(Form.Control, {\n        name: \"species\",\n        type: \"text\",\n        value: this.state.petUpdated.species,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"raza\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }\n      }, \"Raza\"), /*#__PURE__*/React.createElement(Form.Control, {\n        name: \"breed\",\n        type: \"text\",\n        value: this.state.petUpdated.breed,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"select-hospital\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      }, \"Selecciona hospital\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"select\",\n        name: \"vetHospital\",\n        value: this.state.petUpdated.vetHospital,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }\n      }, \"Seleccionar\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: this.props.statePetCardClient.petInfo.vetHospital[0]._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }\n      }, this.props.statePetCardClient.petInfo.vetHospital[0].username), this.state.vetHospitals && this.state.vetHospitals.map(hospital => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: hospital._id,\n          value: hospital._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }\n        }, hospital.username);\n      }))), /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      }, \"Foto de tu mascota\"), /*#__PURE__*/React.createElement(Form.Control, {\n        name: \"petPicPath\",\n        type: \"file\",\n        onChange: this.handleFileUpload,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        variant: \"dark\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      }, \"Actualizar mascota\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"dark\",\n        onClick: () => this.props.closeModal(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }, \"Cerrar\")));\n    }\n  }\n\n}\n\nexport default UpdateFormPets; //     getVetHospitals = () => {\n//         this.hospitalsService.getOnlyVetHospital()\n//             .then(response => {\n//                 return this.setState({ vetHospitals: response.data })})\n//             .catch(err => console.log(err))\n//     }\n//     componentDidMount = () => {\n//         !this.state.vetHospitals && this.getVetHospitals() \n//     }\n//     displayHospitals = () => {\n//          return this.state.vetHospitals && this.state.vetHospitals.map( hospital => {\n//             return (<option value={hospital._id}>{hospital.username}</option>)})\n//     }","map":{"version":3,"sources":["/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/pets/updatePets/UpdateFormPets.js"],"names":["React","Component","VetHospitalProfielService","PetService","FileService","Container","Form","Button","UpdateFormPets","constructor","props","handleInputChange","e","name","value","target","setState","petUpdated","state","handleSubmit","preventDefault","petService","editPet","propsPetCardClient","_id","then","response","console","log","finishUpdatePet","catch","err","handleFileUpload","uploadData","FormData","append","files","filesService","handleUpload","petPicPath","data","secure_url","getVetHospitals","hospitalsService","getOnlyVetHospital","vetHospitals","displayHospitals","map","hospital","username","componentDidMount","statePetCardClient","petInfo","species","breed","owner","vetHospital","render","closeModal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './UpdateFormPets.css'\n\nimport VetHospitalProfielService from '../../../../service/profile.service'\nimport PetService from '../../../../service/pet.service'\nimport FileService from '../../../../service/file.service'\n\n\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass UpdateFormPets extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            petUpdated: { //Revisar los nombres de las props\n                name: this.props.statePetCardClient.petInfo.name,\n                species: this.props.statePetCardClient.petInfo.species,\n                petPicPath: this.props.statePetCardClient.petInfo.petPicPath,\n                breed: this.props.statePetCardClient.petInfo.breed,\n                owner: this.props.statePetCardClient.petInfo.owner._id,\n                vetHospital: !this.props.statePetCardClient.petInfo.vetHospital[0]._id ? \" \" : this.props.statePetCardClient.petInfo.vetHospital[0]._id // En el back tengo que hacer un finbyid del nuevo id del hospital que se actualizce\n            },\n            vetHospitals: null,\n\n        }\n        this.petService = new PetService()\n        this.filesService = new FileService()\n        this.hospitalsService = new VetHospitalProfielService()\n    }\n\n    handleInputChange = e => {\n        const { name, value } = e.target\n\n        this.setState({\n            petUpdated: { ...this.state.petUpdated, [name]: value }\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.petService.editPet(this.props.propsPetCardClient._id, this.state.petUpdated)\n            // .then(() => this.props.finishUpdatePet())\n            .then((response) => {\n                console.log('este es el handlecubmit')\n                // console.log(response)\n                // console.log(this.props)\n                this.props.finishUpdatePet()\n                //  this.props.updatePetInfo(response.data, this.props.index)\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleFileUpload = e => {\n\n        const uploadData = new FormData()\n        uploadData.append(\"petPicPath\", e.target.files[0])\n        this.filesService.handleUpload(uploadData)\n            .then(response => {\n                this.setState({\n                    petUpdated: { ...this.state.petUpdated, petPicPath: response.data.secure_url }\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    getVetHospitals = () => {\n        this.hospitalsService.getOnlyVetHospital()\n            .then(response => this.setState({ vetHospitals: response.data }))\n            .catch(err => console.log(err))\n    }\n\n\n    displayHospitals = () => {\n         this.state.vetHospitals && this.state.vetHospitals.map( hospital => {             \n            return (<option value={hospital._id}>{hospital.username}</option>)})\n    }\n\n\n    componentDidMount = () => {\n        this.getVetHospitals() \n    }\n\n\n\n    render() {\n\n\n\n        if (!this.state.vetHospitals) {\n            return <h1>Cargando...</h1>\n        } else {\n        return (\n            <Container>\n\n                <h1>Actualizar Mascota</h1>\n                <hr></hr>\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group controlId=\"nombre\">\n                        <Form.Label>Nombre</Form.Label>\n                        <Form.Control name=\"name\" type=\"text\" value={this.state.petUpdated.name} onChange={this.handleInputChange} />\n                    </Form.Group>\n                    <Form.Group controlId=\"especie\">\n                        <Form.Label>Especie</Form.Label>\n                        <Form.Control name=\"species\" type=\"text\" value={this.state.petUpdated.species} onChange={this.handleInputChange} />\n                    </Form.Group>\n                    <Form.Group controlId=\"raza\">\n                        <Form.Label>Raza</Form.Label>\n                        <Form.Control name=\"breed\" type=\"text\" value={this.state.petUpdated.breed} onChange={this.handleInputChange} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"select-hospital\">\n                        <Form.Label>Selecciona hospital</Form.Label>\n                        <Form.Control as=\"select\" name=\"vetHospital\" value={this.state.petUpdated.vetHospital} onChange={this.handleInputChange} >\n                            <option value=\"\">Seleccionar</option>\n                            <option value={this.props.statePetCardClient.petInfo.vetHospital[0]._id}>{this.props.statePetCardClient.petInfo.vetHospital[0].username}</option>\n\n                            {         this.state.vetHospitals && this.state.vetHospitals.map( hospital => {             \n            return (<option key={hospital._id} value={hospital._id}>{hospital.username}</option>)})}\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"img\">\n                        <Form.Label>Foto de tu mascota</Form.Label>\n                        <Form.Control name=\"petPicPath\" type=\"file\" onChange={this.handleFileUpload} />\n                    </Form.Group>\n                    <Button variant=\"dark\" type=\"submit\">Actualizar mascota</Button>\n                    <Button variant=\"dark\" onClick={() => this.props.closeModal()}>Cerrar</Button>\n\n                </Form>\n\n            </Container>\n        )\n        }\n    }\n}\n\nexport default UpdateFormPets\n\n\n\n\n\n\n\n\n\n\n\n//     getVetHospitals = () => {\n//         this.hospitalsService.getOnlyVetHospital()\n//             .then(response => {\n//                 return this.setState({ vetHospitals: response.data })})\n//             .catch(err => console.log(err))\n//     }\n\n\n//     componentDidMount = () => {\n//         !this.state.vetHospitals && this.getVetHospitals() \n//     }\n\n//     displayHospitals = () => {\n//          return this.state.vetHospitals && this.state.vetHospitals.map( hospital => {\n\n//             return (<option value={hospital._id}>{hospital.username}</option>)})\n//     }"]},"metadata":{},"sourceType":"module"}