{"ast":null,"code":"var _jsxFileName = \"/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/dashboard/dashboardClient/DashboardClient.js\";\nimport React, { Component } from 'react';\nimport PetService from '../../../../service/pet.service';\nimport CiteCard from '../../cites/citesCard/CiteCard';\nimport QueryCard from '../../query/queryCard/QueryCard';\nimport CiteForm from '../../cites/citesForm/CiteForm';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Figure from 'react-bootstrap/Figure';\nimport FigureImage from 'react-bootstrap/FigureImage';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Toast from 'react-bootstrap/Toast';\nimport Modal from 'react-bootstrap/Modal';\nimport { Link } from 'react-router-dom';\nimport PetCardClient from '../../pets/petCardClient/PetCardClient';\n\nclass DashboardClient extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleModal = visible => this.setState({\n      modalShow: visible\n    });\n\n    this.handletoast = (visible, text = '') => {\n      const toastCopy = { ...this.state.toast\n      };\n      toastCopy.show = visible;\n      toastCopy.text = text;\n      this.setState({\n        toast: toastCopy\n      });\n    };\n\n    this.state = {\n      userInfo: {\n        pets: \"\"\n      },\n      toast: {\n        show: false,\n        text: ''\n      },\n      modalShow: false\n    }; // this.citeService = new CiteService()\n\n    this.petService = new PetService();\n  }\n\n  // getCitesInfo = () => {\n  //     let petId \n  //     this.props.loggedInUser.pets && this.props.loggedInUser.pets.map(pet => {\n  //          console.log(`Este es el ide de los pets?? ${pet._id}`)\n  //          petId = pet._id\n  //     return petId})\n  //     console.log(`Este deberia ser petId${petId}`)\n  //          this.citeService.citesFromPet(petId)\n  //          .then(response => this.setState({ cites: response.data }))\n  //     .catch(err => console.log(err))\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      as: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleModal(true),\n      variant: \"dark\",\n      style: {\n        marginBottom: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 26\n      }\n    }, \"Crear nueva mascota\")))), /*#__PURE__*/React.createElement(Container, {\n      as: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, this.props.loggedInUser.pets && this.props.loggedInUser.pets.map(pet => /*#__PURE__*/React.createElement(PetCardClient, Object.assign({\n      key: pet._id\n    }, pet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 91\n      }\n    })))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.modalShow,\n      onHide: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"petF\", {\n      finishCitePost: this.finishCiteCreate,\n      closeModal: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Toast, {\n      onClose: () => this.handletoast(false),\n      show: this.state.toast.show,\n      delay: 3000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Toast.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, \"Mensaje\")), /*#__PURE__*/React.createElement(Toast.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, this.state.toast.text)));\n  }\n\n}\n\nexport default DashboardClient;","map":{"version":3,"sources":["/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/dashboard/dashboardClient/DashboardClient.js"],"names":["React","Component","PetService","CiteCard","QueryCard","CiteForm","Container","Row","Col","Figure","FigureImage","Form","Button","Toast","Modal","Link","PetCardClient","DashboardClient","constructor","props","handleModal","visible","setState","modalShow","handletoast","text","toastCopy","state","toast","show","userInfo","pets","petService","render","marginBottom","loggedInUser","map","pet","_id","finishCiteCreate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\n\nimport PetService from '../../../../service/pet.service'\n\n\n\nimport CiteCard from '../../cites/citesCard/CiteCard'\nimport QueryCard from '../../query/queryCard/QueryCard'\nimport CiteForm from '../../cites/citesForm/CiteForm'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Figure from 'react-bootstrap/Figure'\nimport FigureImage from 'react-bootstrap/FigureImage'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Toast from 'react-bootstrap/Toast'\nimport Modal from 'react-bootstrap/Modal'\n\nimport { Link } from 'react-router-dom'\nimport PetCardClient from '../../pets/petCardClient/PetCardClient'\n\n\nclass DashboardClient extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { \n            userInfo: {\n                pets: \"\"\n            },\n            toast: {\n                show: false,\n                text: ''\n            },\n            modalShow: false\n\n        }\n        // this.citeService = new CiteService()\n        this.petService = new PetService()\n    }\n    \n    handleModal = visible => this.setState({ modalShow: visible })\n    handletoast = (visible, text = '') => {\n        const toastCopy = { ...this.state.toast }\n        toastCopy.show = visible\n        toastCopy.text = text\n        this.setState({ toast: toastCopy })\n    }\n    \n    // getCitesInfo = () => {\n    //     let petId \n    //     this.props.loggedInUser.pets && this.props.loggedInUser.pets.map(pet => {\n    //          console.log(`Este es el ide de los pets?? ${pet._id}`)\n    //          petId = pet._id\n            \n    //     return petId})\n    //     console.log(`Este deberia ser petId${petId}`)\n    //          this.citeService.citesFromPet(petId)\n    //          .then(response => this.setState({ cites: response.data }))\n    //     .catch(err => console.log(err))\n    // }\n\n\n\n\n\n    render() {\n\n\n        return (\n            <>\n                <Container as=\"section\" >\n                    <Row>\n                        <Col>\n\n                         <Button onClick={() => this.handleModal(true)} variant=\"dark\" style={{ marginBottom: '20px' }}>Crear nueva mascota</Button>\n\n                        </Col>\n\n\n                    </Row>\n                </Container>\n\n                <Container as=\"section\" >\n\n                \n                {this.props.loggedInUser.pets && this.props.loggedInUser.pets.map(pet =>  <PetCardClient key={pet._id} {...pet} />)}\n\n                </Container>\n\n                {/* <Container as=\"section\" >\n\n                <h1>Citas</h1>\n\n\n                    {this.state.cites && this.state.cites.map(cite =>  <CiteCard key={cite._id} {...cite} />)}\n\n\n                </Container>\n\n                <Container as=\"section\" >\n\n                <h1>Consultas</h1>\n\n\n                    {this.state.querys && this.state.querys.map(query => <QueryCard key={query._id} {...query} />)}\n\n\n                </Container> */}\n\n                <Modal show={this.state.modalShow} onHide={() => this.handleModal(false)}>\n                    <Modal.Body>\n                        <petF finishCitePost={this.finishCiteCreate} closeModal={() => this.handleModal(false)} />\n                    </Modal.Body>\n                </Modal>\n\n                <Toast onClose={() => this.handletoast(false)} show={this.state.toast.show} delay={3000} >\n                    <Toast.Header>\n                        <strong className=\"mr-auto\">Mensaje</strong>\n                    </Toast.Header>\n                    <Toast.Body>{this.state.toast.text}</Toast.Body>\n                </Toast>\n            </>\n\n        )\n    }\n}\n\nexport default DashboardClient"]},"metadata":{},"sourceType":"module"}