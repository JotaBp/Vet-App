{"ast":null,"code":"var _jsxFileName = \"/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/dashboard/dashboardClient/DashboardClient.js\";\nimport React, { Component } from 'react';\nimport './DashboardCliente.css';\nimport PetForm from '../../pets/petsForm/PetForm';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Toast from 'react-bootstrap/Toast';\nimport Modal from 'react-bootstrap/Modal';\nimport PetCardClient from '../../pets/petCardClient/PetCardClient';\nimport PetService from '../../../../service/pet.service';\n\nclass DashboardClient extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleModal = visible => this.setState({\n      modalShow: visible\n    });\n\n    this.handletoast = (visible, text = '') => {\n      const toastCopy = { ...this.state.toast\n      };\n      toastCopy.show = visible;\n      toastCopy.text = text;\n      this.setState({\n        toast: toastCopy\n      });\n    };\n\n    this.getPetsFromClient = idClient => {\n      this.petService.getPetsFromClient(idClient).then(response => {\n        console.log(response.data);\n        return this.setState({\n          userInfo: { ...this.state.userInfo,\n            pets: response.data\n          }\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.finishPetCreate = () => {\n      this.getPetsFromClient(this.props.loggedInUser._id);\n      this.handleModal(false);\n      this.handletoast(true, 'Has creado una nueva mascota');\n    };\n\n    this.componentDidMount = () => {\n      this.getPetsFromClient(this.props.loggedInUser._id);\n    };\n\n    this.finishUpdatedPetPost = () => {\n      this.getPetsFromClient(this.props.loggedInUser._id);\n      this.handleModal(false);\n      this.handletoast(true, 'Has creado una nueva mascota');\n    };\n\n    this.updatePetInfo = (newPetInfo, idx) => {\n      const petsInfo = this.state.userInfo.pets;\n      petsInfo[idx] = newPetInfo;\n      this.setState({\n        userInfo: { ...this.state.userInfo,\n          pets: petsInfo\n        }\n      });\n      this.handleModal(false);\n      this.handletoast(true, 'Has Actualizado la mascota');\n    };\n\n    this.state = {\n      userInfo: {\n        id: this.props.loggedInUser._id,\n        pets: []\n      },\n      toast: {\n        show: false,\n        text: ''\n      },\n      modalShow: false\n    };\n    this.petService = new PetService();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      as: \"section\",\n      className: \"content-dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleModal(true),\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \"Crear nueva mascota\"), /*#__PURE__*/React.createElement(Toast, {\n      onClose: () => this.handletoast(false),\n      show: this.state.toast.show,\n      delay: 3000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Toast.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }, \"Mensaje\")), /*#__PURE__*/React.createElement(Toast.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, this.state.toast.text)), this.state.userInfo.pets && this.state.userInfo.pets.map((pet, idx) => {\n      return /*#__PURE__*/React.createElement(PetCardClient, Object.assign({\n        index: idx,\n        key: pet._id\n      }, pet, {\n        reloadPets: () => this.getPetsFromClient(this.state.userInfo.id),\n        finishUpdatePetPost: this.finishUpdatedPetPost,\n        updatePetInfo: this.updatePetInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 33\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(Modal, {\n      className: \"modal-window\",\n      show: this.state.modalShow,\n      onHide: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PetForm, {\n      finishPetPost: this.finishPetCreate,\n      ownerID: this.props.loggedInUser._id,\n      closeModal: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default DashboardClient;","map":{"version":3,"sources":["/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/dashboard/dashboardClient/DashboardClient.js"],"names":["React","Component","PetForm","Container","Button","Toast","Modal","PetCardClient","PetService","DashboardClient","constructor","props","handleModal","visible","setState","modalShow","handletoast","text","toastCopy","state","toast","show","getPetsFromClient","idClient","petService","then","response","console","log","data","userInfo","pets","catch","err","finishPetCreate","loggedInUser","_id","componentDidMount","finishUpdatedPetPost","updatePetInfo","newPetInfo","idx","petsInfo","id","render","map","pet"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,wBAAP;AAEA,OAAOC,OAAP,MAAoB,6BAApB;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,OAAOC,aAAP,MAA0B,wCAA1B;AAEA,OAAOC,UAAP,MAAuB,iCAAvB;;AAGA,MAAMC,eAAN,SAA8BR,SAA9B,CAAwC;AAEpCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAoBnBC,WApBmB,GAoBLC,OAAO,IAAI,KAAKC,QAAL,CAAc;AAAEC,MAAAA,SAAS,EAAEF;AAAb,KAAd,CApBN;;AAAA,SAqBnBG,WArBmB,GAqBL,CAACH,OAAD,EAAUI,IAAI,GAAG,EAAjB,KAAwB;AAClC,YAAMC,SAAS,GAAG,EAAE,GAAG,KAAKC,KAAL,CAAWC;AAAhB,OAAlB;AACAF,MAAAA,SAAS,CAACG,IAAV,GAAiBR,OAAjB;AACAK,MAAAA,SAAS,CAACD,IAAV,GAAiBA,IAAjB;AACA,WAAKH,QAAL,CAAc;AAAEM,QAAAA,KAAK,EAAEF;AAAT,OAAd;AACH,KA1BkB;;AAAA,SA4BnBI,iBA5BmB,GA4BEC,QAAD,IAAc;AAC9B,WAAKC,UAAL,CAAgBF,iBAAhB,CAAkCC,QAAlC,EACKE,IADL,CACUC,QAAQ,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,eAAO,KAAKf,QAAL,CAAc;AAAEgB,UAAAA,QAAQ,EAAE,EAAE,GAAG,KAAKX,KAAL,CAAWW,QAAhB;AAA0BC,YAAAA,IAAI,EAAEL,QAAQ,CAACG;AAAzC;AAAZ,SAAd,CAAP;AACH,OAJL,EAKKG,KALL,CAKWC,GAAG,IAAIN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CALlB;AAMH,KAnCkB;;AAAA,SAqCnBC,eArCmB,GAqCD,MAAM;AACpB,WAAKZ,iBAAL,CAAuB,KAAKX,KAAL,CAAWwB,YAAX,CAAwBC,GAA/C;AACA,WAAKxB,WAAL,CAAiB,KAAjB;AACA,WAAKI,WAAL,CAAiB,IAAjB,EAAuB,8BAAvB;AACH,KAzCkB;;AAAA,SA2CnBqB,iBA3CmB,GA2CC,MAAM;AACtB,WAAKf,iBAAL,CAAuB,KAAKX,KAAL,CAAWwB,YAAX,CAAwBC,GAA/C;AACH,KA7CkB;;AAAA,SA+CnBE,oBA/CmB,GA+CI,MAAM;AACzB,WAAKhB,iBAAL,CAAuB,KAAKX,KAAL,CAAWwB,YAAX,CAAwBC,GAA/C;AACA,WAAKxB,WAAL,CAAiB,KAAjB;AACA,WAAKI,WAAL,CAAiB,IAAjB,EAAuB,8BAAvB;AAEH,KApDkB;;AAAA,SAsDnBuB,aAtDmB,GAsDH,CAACC,UAAD,EAAaC,GAAb,KAAqB;AACjC,YAAMC,QAAQ,GAAG,KAAKvB,KAAL,CAAWW,QAAX,CAAoBC,IAArC;AACAW,MAAAA,QAAQ,CAACD,GAAD,CAAR,GAAgBD,UAAhB;AAEA,WAAK1B,QAAL,CAAc;AAAEgB,QAAAA,QAAQ,EAAE,EAAE,GAAG,KAAKX,KAAL,CAAWW,QAAhB;AAA0BC,UAAAA,IAAI,EAAEW;AAAhC;AAAZ,OAAd;AACA,WAAK9B,WAAL,CAAiB,KAAjB;AACA,WAAKI,WAAL,CAAiB,IAAjB,EAAuB,4BAAvB;AAEH,KA9DkB;;AAEf,SAAKG,KAAL,GAAa;AACTW,MAAAA,QAAQ,EAAE;AACNa,QAAAA,EAAE,EAAE,KAAKhC,KAAL,CAAWwB,YAAX,CAAwBC,GADtB;AAENL,QAAAA,IAAI,EAAE;AAFA,OADD;AAKTX,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE,KADH;AAEHJ,QAAAA,IAAI,EAAE;AAFH,OALE;AASTF,MAAAA,SAAS,EAAE;AATF,KAAb;AAaA,SAAKS,UAAL,GAAkB,IAAIhB,UAAJ,EAAlB;AAGH;;AA+CDoC,EAAAA,MAAM,GAAG;AAEL,wBACI,uDAEI,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAC,SAAd;AAAwB,MAAA,SAAS,EAAC,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKhC,WAAL,CAAiB,IAAjB,CAAvB;AAA+C,MAAA,OAAO,EAAC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,eAII,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,MAAM,KAAKI,WAAL,CAAiB,KAAjB,CAAtB;AAA+C,MAAA,IAAI,EAAE,KAAKG,KAAL,CAAWC,KAAX,CAAiBC,IAAtE;AAA4E,MAAA,KAAK,EAAE,IAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CADJ,eAKI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,KAAKF,KAAL,CAAWC,KAAX,CAAiBH,IAA9B,CALJ,CAJJ,EAaK,KAAKE,KAAL,CAAWW,QAAX,CAAoBC,IAApB,IAA4B,KAAKZ,KAAL,CAAWW,QAAX,CAAoBC,IAApB,CAAyBc,GAAzB,CAA6B,CAACC,GAAD,EAAML,GAAN,KAAa;AAEnE,0BAAQ,oBAAC,aAAD;AACJ,QAAA,KAAK,EAAGA,GADJ;AAEJ,QAAA,GAAG,EAAEK,GAAG,CAACV;AAFL,SAEcU,GAFd;AAGJ,QAAA,UAAU,EAAE,MAAM,KAAKxB,iBAAL,CAAuB,KAAKH,KAAL,CAAWW,QAAX,CAAoBa,EAA3C,CAHd;AAIJ,QAAA,mBAAmB,EAAE,KAAKL,oBAJtB;AAKJ,QAAA,aAAa,EAAE,KAAKC,aALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAR;AAOC,KATwB,CAbjC,CAFJ,eA4BI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWJ,SAAjD;AAA4D,MAAA,MAAM,EAAE,MAAM,KAAKH,WAAL,CAAiB,KAAjB,CAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,aAAa,EAAE,KAAKsB,eAA7B;AAA8C,MAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWwB,YAAX,CAAwBC,GAA/E;AAAoF,MAAA,UAAU,EAAE,MAAM,KAAKxB,WAAL,CAAiB,KAAjB,CAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CA5BJ,CADJ;AA0CH;;AA/GmC;;AAkHxC,eAAeH,eAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport './DashboardCliente.css'\n\nimport PetForm from '../../pets/petsForm/PetForm'\n\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Toast from 'react-bootstrap/Toast'\nimport Modal from 'react-bootstrap/Modal'\n\nimport PetCardClient from '../../pets/petCardClient/PetCardClient'\n\nimport PetService from '../../../../service/pet.service'\n\n\nclass DashboardClient extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            userInfo: {\n                id: this.props.loggedInUser._id,\n                pets: []\n            },\n            toast: {\n                show: false,\n                text: ''\n            },\n            modalShow: false,\n\n        }\n\n        this.petService = new PetService()\n\n\n    }\n\n    handleModal = visible => this.setState({ modalShow: visible })\n    handletoast = (visible, text = '') => {\n        const toastCopy = { ...this.state.toast }\n        toastCopy.show = visible\n        toastCopy.text = text\n        this.setState({ toast: toastCopy })\n    }\n\n    getPetsFromClient = (idClient) => {\n        this.petService.getPetsFromClient(idClient)\n            .then(response => {\n                console.log(response.data)\n                return this.setState({ userInfo: { ...this.state.userInfo, pets: response.data } })\n            })\n            .catch(err => console.log(err))\n    }\n\n    finishPetCreate = () => {\n        this.getPetsFromClient(this.props.loggedInUser._id)\n        this.handleModal(false)\n        this.handletoast(true, 'Has creado una nueva mascota')\n    }\n\n    componentDidMount = () => {\n        this.getPetsFromClient(this.props.loggedInUser._id)\n    }\n\n    finishUpdatedPetPost = () => {\n        this.getPetsFromClient(this.props.loggedInUser._id)\n        this.handleModal(false)\n        this.handletoast(true, 'Has creado una nueva mascota')\n\n    }\n\n    updatePetInfo = (newPetInfo, idx) => {\n        const petsInfo = this.state.userInfo.pets\n        petsInfo[idx] = newPetInfo\n\n        this.setState({ userInfo: { ...this.state.userInfo, pets: petsInfo } })\n        this.handleModal(false)\n        this.handletoast(true, 'Has Actualizado la mascota')\n\n    }\n\n\n    render() {\n\n        return (\n            <>\n\n                <Container as=\"section\" className=\"content-dashboard\">\n\n                    <Button onClick={() => this.handleModal(true)} variant=\"dark\">Crear nueva mascota</Button>\n\n                    <Toast onClose={() => this.handletoast(false)} show={this.state.toast.show} delay={3000} >\n                        <Toast.Header>\n\n                            <strong className=\"mr-auto\">Mensaje</strong>\n                        </Toast.Header>\n                        <Toast.Body>{this.state.toast.text}</Toast.Body>\n                    </Toast>\n\n\n                    {this.state.userInfo.pets && this.state.userInfo.pets.map((pet, idx) =>{\n\n                        return (<PetCardClient\n                            index= {idx}\n                            key={pet._id} {...pet}\n                            reloadPets={() => this.getPetsFromClient(this.state.userInfo.id)}\n                            finishUpdatePetPost={this.finishUpdatedPetPost}\n                            updatePetInfo={this.updatePetInfo}\n                        />)\n                        })}\n\n                </Container>\n\n                <Modal className=\"modal-window\" show={this.state.modalShow} onHide={() => this.handleModal(false)}>\n                    <Modal.Body>\n                        <PetForm finishPetPost={this.finishPetCreate} ownerID={this.props.loggedInUser._id} closeModal={() => this.handleModal(false)} />\n                    </Modal.Body>\n                </Modal>\n\n\n\n\n\n            </>\n\n        )\n    }\n}\n\nexport default DashboardClient"]},"metadata":{},"sourceType":"module"}