{"ast":null,"code":"var _jsxFileName = \"/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/pets/petCardClient/PetCardClient.js\";\nimport React, { Component } from 'react';\nimport './PetCardClient.css';\nimport CiteService from '../../../../service/cite.service';\nimport QueryService from '../../../../service/query.service';\nimport PetService from '../../../../service/pet.service';\nimport UpdateFormPets from '../updatePets/UpdateFormPets';\nimport QueryForm from '../../query/queryForm/QueryForm';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Modal from 'react-bootstrap/Modal';\nimport Toast from 'react-bootstrap/Toast';\n\nclass PetCardClient extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleModal = (visible, modalName) => {\n      this.setState({\n        modal: {\n          show: visible,\n          name: modalName\n        }\n      });\n    };\n\n    this.handletoast = (visible, text = '') => {\n      const toastCopy = { ...this.state.toast\n      };\n      toastCopy.show = visible;\n      toastCopy.text = text;\n      this.setState({\n        toast: toastCopy\n      });\n    };\n\n    this.getQuerysInfo = () => {\n      this.queryService.queryFromPet(this.props._id).then(response => {\n        return this.setState({\n          querys: response.data\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.getCitesInfo = () => {\n      this.citeService.citesFromPet(this.props._id).then(response => this.setState({\n        cites: response.data\n      })).catch(err => console.log(err));\n    };\n\n    this.getPetDetailsInfo = () => {\n      this.petService.getPetDetails(this.props._id).then(response => this.setState({\n        petInfo: response.data\n      })).catch(err => console.log(err));\n    };\n\n    this.handleDelete = petId => {\n      this.petService.deletePet(petId).then(() => this.props.reloadPets()).catch(err => console.log(err));\n    };\n\n    this.finishQueryPost = () => {\n      this.getQuerysInfo();\n      this.handleModal(false);\n      this.handletoast(true, 'Consulta enviada al Hospital');\n    };\n\n    this.finishUpdatedPetPost = () => {\n      this.getPetDetailsInfo();\n      this.handleModal(false);\n      this.handletoast(true, 'Has actualizado la mascota');\n    };\n\n    this.componentDidMount = () => {\n      this.getQuerysInfo();\n      this.getCitesInfo();\n    };\n\n    this.displayModal = modalName => {\n      if (this.state.modal.show) {\n        switch (modalName) {\n          case \"createQuery\":\n            return /*#__PURE__*/React.createElement(Modal.Body, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(QueryForm, {\n              finishQueryCreate: this.finishQueryPost,\n              petId: this.state.petInfo.id,\n              hospitalArr: this.props.vetHospital,\n              closeModal: () => this.handleModal(false),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 29\n              }\n            }));\n\n          case \"editPet\":\n            return /*#__PURE__*/React.createElement(Modal.Body, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(UpdateFormPets, {\n              propsPetCardClient: this.props,\n              statePetCardClient: this.state,\n              finishUpdatePet: this.finishUpdatedPetPost,\n              closeModal: () => this.handleModal(false),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 29\n              }\n            }));\n\n          default:\n            return null;\n        }\n      }\n    };\n\n    this.state = {\n      petInfo: {\n        id: this.props._id,\n        petPicPath: this.props.petPicPath,\n        name: this.props.name,\n        species: this.props.species,\n        breed: this.props.breed,\n        vetHospital: this.props.vetHospital,\n        owner: this.props.owner\n      },\n      cites: \"\",\n      querys: \"\",\n      toast: {\n        show: false,\n        text: ''\n      },\n      modal: {\n        show: false,\n        name: ''\n      }\n    };\n    this.citeService = new CiteService();\n    this.queryService = new QueryService();\n    this.petService = new PetService();\n  }\n\n  render() {\n    con;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      as: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      as: \"article\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      variant: \"top\",\n      src: this.state.petInfo.petPicPath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Card.Header, {\n      as: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    }, this.state.petInfo.name), /*#__PURE__*/React.createElement(Button, {\n      className: \"delete-button\",\n      onClick: () => this.handleDelete(this.state.petInfo.id),\n      variant: \"danger\",\n      size: \"md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 33\n      }\n    }, \"Eliminar mascota\"), /*#__PURE__*/React.createElement(ListGroup, {\n      className: \"list-group-flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 37\n      }\n    }, this.state.petInfo.species), /*#__PURE__*/React.createElement(ListGroup.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 37\n      }\n    }, this.state.petInfo.breed), /*#__PURE__*/React.createElement(ListGroup.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 37\n      }\n    }, \"Hospital de referencia: \", this.state.petInfo.vetHospital[0] && this.state.petInfo.vetHospital[0].username)), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"query\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 33\n      }\n    }, \"Consultas\"), this.state.querys && this.state.querys.map(query => {\n      return /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"body\",\n        key: query._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 45\n        }\n      }, query.subject), /*#__PURE__*/React.createElement(Card.Subtitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 45\n        }\n      }, query.date), /*#__PURE__*/React.createElement(Card.Text, {\n        as: \"p\",\n        className: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 45\n        }\n      }, query.description), query.citeHospital && /*#__PURE__*/React.createElement(Card, {\n        style: {\n          display: query.citeHospital.description ? 'block' : 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 68\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        className: \"card-title-response\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 49\n        }\n      }, \"Respuesta\"), /*#__PURE__*/React.createElement(Card.Text, {\n        as: \"p\",\n        className: \"card-text-response\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 49\n        }\n      }, query.citeHospital.description)));\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"cite\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 33\n      }\n    }, \"Citas\"), this.state.cites && this.state.cites.map(cite => {\n      return /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"body\",\n        key: cite._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 45\n        }\n      }, cite.subject), /*#__PURE__*/React.createElement(Card.Subtitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 45\n        }\n      }, cite.date), /*#__PURE__*/React.createElement(Card.Text, {\n        as: \"p\",\n        className: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 45\n        }\n      }, cite.description));\n    }), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleModal(true, \"createQuery\"),\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 37\n      }\n    }, \"Crear Consulta para \", this.state.petInfo.name), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleModal(true, \"editPet\"),\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 37\n      }\n    }, \"Actualizar mascota \", this.state.petInfo.name)))))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.modal.show,\n      onHide: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, this.displayModal(this.state.modal.name)), /*#__PURE__*/React.createElement(Toast, {\n      className: \"toast-window\",\n      onClose: () => this.handletoast(false),\n      show: this.state.toast.show,\n      delay: 3000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Toast.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 25\n      }\n    }, \"Mensaje\")), /*#__PURE__*/React.createElement(Toast.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }, this.state.toast.text)));\n  }\n\n}\n\nexport default PetCardClient;","map":{"version":3,"sources":["/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/pets/petCardClient/PetCardClient.js"],"names":["React","Component","CiteService","QueryService","PetService","UpdateFormPets","QueryForm","Container","Row","Col","Card","Button","ListGroup","Modal","Toast","PetCardClient","constructor","props","handleModal","visible","modalName","setState","modal","show","name","handletoast","text","toastCopy","state","toast","getQuerysInfo","queryService","queryFromPet","_id","then","response","querys","data","catch","err","console","log","getCitesInfo","citeService","citesFromPet","cites","getPetDetailsInfo","petService","getPetDetails","petInfo","handleDelete","petId","deletePet","reloadPets","finishQueryPost","finishUpdatedPetPost","componentDidMount","displayModal","id","vetHospital","petPicPath","species","breed","owner","render","con","username","map","query","subject","date","description","citeHospital","display","cite"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport './PetCardClient.css'\n\nimport CiteService from '../../../../service/cite.service'\nimport QueryService from '../../../../service/query.service'\nimport PetService from '../../../../service/pet.service'\n\nimport UpdateFormPets from '../updatePets/UpdateFormPets'\nimport QueryForm from '../../query/queryForm/QueryForm'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Modal from 'react-bootstrap/Modal'\nimport Toast from 'react-bootstrap/Toast'\n\n\nclass PetCardClient extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n\n            petInfo: {\n                id: this.props._id,\n                petPicPath: this.props.petPicPath,\n                name: this.props.name,\n                species: this.props.species,\n                breed: this.props.breed,\n                vetHospital: this.props.vetHospital,\n                owner: this.props.owner\n\n            },\n            cites: \"\",\n            querys: \"\",\n\n\n            toast: {\n                show: false,\n                text: ''\n            },\n            modal: {\n                show: false,\n                name: ''\n            }\n\n        }\n        this.citeService = new CiteService()\n        this.queryService = new QueryService()\n        this.petService = new PetService()\n\n    }\n\n\n    handleModal = (visible, modalName) => {\n        this.setState({ modal: { show: visible, name: modalName } })}\n\n    handletoast = (visible, text = '') => {\n        const toastCopy = { ...this.state.toast }\n        toastCopy.show = visible\n        toastCopy.text = text\n        this.setState({ toast: toastCopy })\n    }\n\n    getQuerysInfo = () => {\n        this.queryService.queryFromPet(this.props._id)\n            .then(response => {\n                return this.setState({ querys: response.data })\n            })\n            .catch(err => console.log(err))\n    }\n\n    getCitesInfo = () => {\n        this.citeService.citesFromPet(this.props._id)\n            .then(response => this.setState({ cites: response.data }))\n            .catch(err => console.log(err))\n    }\n\n    getPetDetailsInfo = () => {\n        this.petService.getPetDetails(this.props._id)\n            .then(response => this.setState({ petInfo: response.data }))\n            .catch(err => console.log(err))\n    }\n\n    handleDelete = (petId) => {\n        this.petService.deletePet(petId)\n            .then(() => this.props.reloadPets())\n            .catch(err => console.log(err))\n    }\n\n    finishQueryPost = () => {\n        this.getQuerysInfo()\n        this.handleModal(false)\n        this.handletoast(true, 'Consulta enviada al Hospital')\n    }\n\n    finishUpdatedPetPost = () => {\n        this.getPetDetailsInfo()\n        this.handleModal(false)\n        this.handletoast(true, 'Has actualizado la mascota')\n\n    }\n\n    componentDidMount = () => {\n        this.getQuerysInfo()\n        this.getCitesInfo()\n    }\n\n\n    displayModal = (modalName) => {\n        if (this.state.modal.show) {\n            switch (modalName) {\n                case \"createQuery\":\n                    return (\n                        <Modal.Body>\n                            <QueryForm\n                                finishQueryCreate={this.finishQueryPost}\n                                petId={this.state.petInfo.id}\n                                hospitalArr={this.props.vetHospital}\n                                closeModal={() => this.handleModal(false)} />\n                        </Modal.Body>\n                    )\n                case \"editPet\":\n                    return (\n                        <Modal.Body>\n                            <UpdateFormPets\n                                propsPetCardClient={this.props}\n                                statePetCardClient={this.state}\n                                finishUpdatePet={this.finishUpdatedPetPost}\n                                closeModal={() => this.handleModal(false)}\n\n                            />\n                        </Modal.Body>\n\n                    )\n                default:\n                    return null\n            }\n        }\n    }\n\n    render() {\n        con\n\n\n        return (\n            <>\n                <Container as=\"section\">\n\n\n                    <Row>\n                        <Col as=\"article\">\n                            <Card className=\"card\">\n                                <Card.Img variant=\"top\" src={this.state.petInfo.petPicPath} />\n\n                                <Card.Header as=\"h5\">{this.state.petInfo.name}</Card.Header>\n                                <Button className=\"delete-button\" onClick={() => this.handleDelete(this.state.petInfo.id)} variant=\"danger\" size=\"md\">Eliminar mascota</Button>\n\n                                <ListGroup className=\"list-group-flush\">\n                                    <ListGroup.Item>{this.state.petInfo.species}</ListGroup.Item>\n                                    <ListGroup.Item>{this.state.petInfo.breed}</ListGroup.Item>\n                                    <ListGroup.Item>Hospital de referencia: {this.state.petInfo.vetHospital[0] && this.state.petInfo.vetHospital[0].username}</ListGroup.Item>\n                                </ListGroup>\n\n                                <h4 className=\"query\" >Consultas</h4>\n\n                                {this.state.querys && this.state.querys.map(query => {\n\n\n                                    return (\n\n                                        <Card.Body className=\"body\" key={query._id}>\n                                            <Card.Title>{query.subject}</Card.Title>\n                                            <Card.Subtitle>{query.date}</Card.Subtitle>\n                                            <Card.Text as=\"p\" className=\"card-text\">{query.description}</Card.Text>\n                                            {query.citeHospital && <Card style={{ display: query.citeHospital.description ? 'block' : 'none' }}>\n\n                                                <Card.Title as=\"h5\" className=\"card-title-response\">Respuesta</Card.Title>\n                                                <Card.Text as=\"p\" className=\"card-text-response\">{query.citeHospital.description}</Card.Text>\n\n                                            </Card>}\n                                        </Card.Body>\n                                    )\n                                })}\n\n                                <h4 className=\"cite\">Citas</h4>\n\n                                {this.state.cites && this.state.cites.map(cite => {\n\n\n                                    return (\n                                        <Card.Body className=\"body\" key={cite._id}>\n                                            <Card.Title>{cite.subject}</Card.Title>\n                                            <Card.Subtitle>{cite.date}</Card.Subtitle>\n                                            <Card.Text as=\"p\" className=\"card-text\">{cite.description}</Card.Text>\n                                        </Card.Body>\n                                    )\n                                })}\n\n\n                                <Card.Footer>\n                                    <Button onClick={() => this.handleModal(true, \"createQuery\")} variant=\"dark\" >Crear Consulta para {this.state.petInfo.name}</Button>\n                                    <Button onClick={() => this.handleModal(true, \"editPet\")} variant=\"dark\" >Actualizar mascota {this.state.petInfo.name}</Button>\n\n\n                                </Card.Footer>\n                            </Card>\n\n                        </Col>\n\n                    </Row>\n\n                </Container>\n\n                <Modal show={this.state.modal.show} onHide={() => this.handleModal(false)}>\n                    {this.displayModal(this.state.modal.name)}\n                </Modal>\n\n                <Toast className=\"toast-window\" onClose={() => this.handletoast(false)} show={this.state.toast.show} delay={3000} >\n                    <Toast.Header>\n                        <strong className=\"mr-auto\">Mensaje</strong>\n                    </Toast.Header>\n                    <Toast.Body>{this.state.toast.text}</Toast.Body>\n                </Toast>\n\n            </>\n        )\n    }\n}\n\nexport default PetCardClient\n\n\n\n"]},"metadata":{},"sourceType":"module"}