{"ast":null,"code":"var _jsxFileName = \"/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/pets/petCardClient/PetCardClient.js\";\nimport React, { Component } from 'react';\nimport './PetCardClient.css';\nimport CiteService from '../../../../service/cite.service';\nimport QueryService from '../../../../service/query.service';\nimport QueryForm from '../../query/queryForm/QueryForm';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Modal from 'react-bootstrap/Modal';\nimport Toast from 'react-bootstrap/Toast';\n\nclass PetCardClient extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleModal = visible => this.setState({\n      modalShow: visible\n    });\n\n    this.handletoast = (visible, text = '') => {\n      const toastCopy = { ...this.state.toast\n      };\n      toastCopy.show = visible;\n      toastCopy.text = text;\n      this.setState({\n        toast: toastCopy\n      });\n    };\n\n    this.getQuerysInfo = () => {\n      this.queryService.queryFromPet(this.props._id).then(response => {\n        console.log(response.data); // return this.setState({ querys: response.data })\n      }).catch(err => console.log(err));\n    };\n\n    this.getCitesInfo = () => {\n      this.citeService.citesFromPet(this.props._id).then(response => this.setState({\n        cites: response.data\n      })).catch(err => console.log(err));\n    };\n\n    this.finishQueryPost = () => {\n      this.getQuerysInfo();\n      this.handleModal(false);\n      this.handletoast(true, 'Consulta enviada al Hospital');\n    };\n\n    this.componentDidMount = () => {\n      this.getQuerysInfo();\n      this.getCitesInfo();\n    };\n\n    this.state = {\n      petInfo: {\n        id: this.props._id,\n        petPicPath: this.props.petPicPath,\n        name: this.props.name,\n        species: this.props.species,\n        breed: this.props.breed,\n        vetHospital: this.props.vetHospital\n      },\n      cites: \"\",\n      querys: \"\",\n      toast: {\n        show: false,\n        text: ''\n      },\n      modalShow: false\n    };\n    this.citeService = new CiteService();\n    this.queryService = new QueryService();\n  }\n\n  render() {\n    console.log(this.state.querys);\n    console.log(this.props.vetHospital);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      as: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      as: \"article\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      variant: \"top\",\n      src: this.state.petInfo.petPicPath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Card.Header, {\n      as: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 33\n      }\n    }, this.state.petInfo.name), /*#__PURE__*/React.createElement(ListGroup, {\n      className: \"list-group-flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 37\n      }\n    }, this.state.petInfo.species), /*#__PURE__*/React.createElement(ListGroup.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }\n    }, this.state.petInfo.breed)), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }, \"Consultas\"), this.state.querys && this.state.querys.map(query => {\n      console.log(query.citeHospital);\n      return /*#__PURE__*/React.createElement(Card.Body, {\n        key: query._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 45\n        }\n      }, query.subject), /*#__PURE__*/React.createElement(Card.Subtitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 45\n        }\n      }, query.date), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 45\n        }\n      }, query.description), /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 45\n        }\n      }, \"Respuesta\"), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 45\n        }\n      }, query.citeHospital.description));\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    }, \"Citas\"), this.state.cites && this.state.cites.map(cite => {\n      return /*#__PURE__*/React.createElement(Card.Body, {\n        key: cite._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 45\n        }\n      }, cite.subject), /*#__PURE__*/React.createElement(Card.Subtitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 45\n        }\n      }, cite.date), /*#__PURE__*/React.createElement(Card.Subtitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 45\n        }\n      }, cite.description));\n    }), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleModal(true),\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 37\n      }\n    }, \"Crear Consulta para \", this.state.petInfo.name)))))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.modalShow,\n      onHide: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(QueryForm, {\n      finishQueryCreate: this.finishQueryPost,\n      petId: this.state.petInfo.id,\n      hospitalArr: this.props.vetHospital,\n      closeModal: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Toast, {\n      onClose: () => this.handletoast(false),\n      show: this.state.toast.show,\n      delay: 3000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Toast.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }, \"Mensaje\")), /*#__PURE__*/React.createElement(Toast.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, this.state.toast.text)));\n  }\n\n}\n\nexport default PetCardClient;","map":{"version":3,"sources":["/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/pets/petCardClient/PetCardClient.js"],"names":["React","Component","CiteService","QueryService","QueryForm","Container","Row","Col","Card","Button","ListGroup","Modal","Toast","PetCardClient","constructor","props","handleModal","visible","setState","modalShow","handletoast","text","toastCopy","state","toast","show","getQuerysInfo","queryService","queryFromPet","_id","then","response","console","log","data","catch","err","getCitesInfo","citeService","citesFromPet","cites","finishQueryPost","componentDidMount","petInfo","id","petPicPath","name","species","breed","vetHospital","querys","render","map","query","citeHospital","subject","date","description","cite"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport './PetCardClient.css'\n\nimport CiteService from '../../../../service/cite.service'\nimport QueryService from '../../../../service/query.service'\n\nimport QueryForm from '../../query/queryForm/QueryForm'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Modal from 'react-bootstrap/Modal'\nimport Toast from 'react-bootstrap/Toast'\n\n\nclass PetCardClient extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n\n            petInfo: {\n                id: this.props._id,\n                petPicPath: this.props.petPicPath,\n                name: this.props.name,\n                species: this.props.species,\n                breed: this.props.breed,\n                vetHospital: this.props.vetHospital,\n\n            },\n                cites: \"\",\n                querys: \"\",\n\n\n            toast: {\n                show: false,\n                text: ''\n            },\n            modalShow: false\n        }\n        this.citeService = new CiteService()\n        this.queryService = new QueryService()\n\n    }\n\n    handleModal = visible => this.setState({ modalShow: visible })\n    handletoast = (visible, text = '') => {\n        const toastCopy = { ...this.state.toast }\n        toastCopy.show = visible\n        toastCopy.text = text\n        this.setState({ toast: toastCopy })\n    }\n\n    getQuerysInfo = () => {\n        this.queryService.queryFromPet(this.props._id)\n            .then(response => {console.log(response.data) \n                // return this.setState({ querys: response.data })\n            })\n            .catch(err => console.log(err))\n    }\n\n    getCitesInfo = () => {\n        this.citeService.citesFromPet(this.props._id)\n            .then(response => this.setState({ cites: response.data }))\n            .catch(err => console.log(err))\n    }\n\n    finishQueryPost = () => {\n        this.getQuerysInfo()\n        this.handleModal(false)\n        this.handletoast(true, 'Consulta enviada al Hospital')\n    }\n\n    componentDidMount = () => {\n        this.getQuerysInfo()\n        this.getCitesInfo()\n    }\n\n\n    render() {\n        console.log(this.state.querys)\n        console.log(this.props.vetHospital)\n\n        return (\n            <>\n                <Container as=\"section\">\n\n\n                    <Row>\n                        <Col as=\"article\">\n                            <Card className=\"\">\n                                <Card.Img variant=\"top\" src={this.state.petInfo.petPicPath} />\n\n                                <Card.Header as=\"h5\">{this.state.petInfo.name}</Card.Header>\n                                <ListGroup className=\"list-group-flush\">\n                                    <ListGroup.Item>{this.state.petInfo.species}</ListGroup.Item>\n                                    <ListGroup.Item>{this.state.petInfo.breed}</ListGroup.Item>\n                                </ListGroup>\n\n                                <h4>Consultas</h4>\n\n                                {this.state.querys && this.state.querys.map(query => {\n\n                                    console.log(query.citeHospital)\n\n                                    return (\n                                        \n                                        <Card.Body key={query._id}>\n                                            <Card.Title>{query.subject}</Card.Title>\n                                            <Card.Subtitle>{query.date}</Card.Subtitle>\n                                            <Card.Text >{query.description}</Card.Text>\n\n                                            <Card.Title>Respuesta</Card.Title>\n                                            <Card.Text>{query.citeHospital.description}</Card.Text>\n                                            \n                                        </Card.Body>\n                                        )\n                                })}\n\n                                <h4>Citas</h4>\n\n                                {this.state.cites && this.state.cites.map(cite => {\n\n\n                                    return (\n                                        <Card.Body key={cite._id}>\n                                            <Card.Title>{cite.subject}</Card.Title>\n                                            <Card.Subtitle>{cite.date}</Card.Subtitle>\n                                            <Card.Subtitle >{cite.description}</Card.Subtitle>\n                                        </Card.Body>\n                                        )\n                                })}\n\n\n                                <Card.Footer>\n                                    <Button onClick={() => this.handleModal(true)} variant=\"dark\" >Crear Consulta para {this.state.petInfo.name}</Button>\n\n                                </Card.Footer>\n                            </Card>\n\n                        </Col>\n\n                    </Row>\n\n                </Container>\n\n                <Modal show={this.state.modalShow} onHide={() => this.handleModal(false)}>\n                    <Modal.Body>\n                        <QueryForm finishQueryCreate={this.finishQueryPost} petId={this.state.petInfo.id} hospitalArr={this.props.vetHospital} closeModal={() => this.handleModal(false)} />\n                    </Modal.Body>\n                </Modal>\n\n                <Toast onClose={() => this.handletoast(false)} show={this.state.toast.show} delay={3000} >\n                    <Toast.Header>\n                        <strong className=\"mr-auto\">Mensaje</strong>\n                    </Toast.Header>\n                    <Toast.Body>{this.state.toast.text}</Toast.Body>\n                </Toast>\n\n            </>\n        )\n    }\n}\n\nexport default PetCardClient\n\n\n\n"]},"metadata":{},"sourceType":"module"}