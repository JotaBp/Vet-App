{"ast":null,"code":"var _jsxFileName = \"/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport './Dashboard.css';\nimport CiteService from './../../../service/cite.service';\nimport CiteCard from '../cites/CiteCard';\nimport QueryCard from '../query/QueryCard';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Figure from 'react-bootstrap/Figure';\nimport FigureImage from 'react-bootstrap/FigureImage';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleModal = visible => this.setState({\n      modalShow: visible\n    });\n\n    this.handletoast = (visible, text = '') => {\n      const toastCopy = { ...this.state.toast\n      };\n      toastCopy.show = visible;\n      toastCopy.text = text;\n      this.setState({\n        toast: toastCopy\n      });\n    };\n\n    this.getCitesInfo = () => {\n      this.citeService.citesFromUser(this.props.loggedInUser._id).then(response => this.setState({\n        cites: response.data\n      })).catch(err => console.log(err));\n    };\n\n    this.componentDidMount = () => {\n      this.getCitesInfo();\n    };\n\n    this.finishCiteCreate = () => {\n      this.getCitesInfo();\n      this.handleModal(false);\n      this.handletoast(true, 'Cita creada en BBDD');\n    };\n\n    this.state = {\n      userInfo: {\n        querys: [],\n        cites: \"\"\n      },\n      toast: {\n        show: false,\n        text: ''\n      },\n      modalShow: false\n    };\n    this.citeService = new CiteService();\n  }\n\n  render() {\n    console.log(this.props.loggedInUser._id);\n    console.log(this.state.cites);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      as: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleModal(true),\n      variant: \"dark\",\n      style: {\n        marginBottom: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 26\n      }\n    }, \"Crear nueva cita\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(Container, {\n      as: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, \"Citas\"), this.state.cites && this.state.cites.map(cite => /*#__PURE__*/React.createElement(CiteCard, Object.assign({\n      key: cite._id\n    }, cite, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 72\n      }\n    })))), /*#__PURE__*/React.createElement(Container, {\n      as: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.modalShow,\n      onHide: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CoasterForm, {\n      finishCiteCreate: this.finishCiteCreate,\n      closeModal: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/dashboard/Dashboard.js"],"names":["React","Component","CiteService","CiteCard","QueryCard","Container","Row","Col","Figure","FigureImage","Form","Button","Link","Dashboard","constructor","props","handleModal","visible","setState","modalShow","handletoast","text","toastCopy","state","toast","show","getCitesInfo","citeService","citesFromUser","loggedInUser","_id","then","response","cites","data","catch","err","console","log","componentDidMount","finishCiteCreate","userInfo","querys","render","marginBottom","map","cite"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AAEA,OAAOC,WAAP,MAAwB,iCAAxB;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,SAASC,IAAT,QAAqB,kBAArB;;AAGA,MAAMC,SAAN,SAAwBZ,SAAxB,CAAkC;AAE9Ba,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAiBnBC,WAjBmB,GAiBLC,OAAO,IAAI,KAAKC,QAAL,CAAc;AAAEC,MAAAA,SAAS,EAAEF;AAAb,KAAd,CAjBN;;AAAA,SAkBnBG,WAlBmB,GAkBL,CAACH,OAAD,EAAUI,IAAI,GAAG,EAAjB,KAAwB;AAClC,YAAMC,SAAS,GAAG,EAAE,GAAG,KAAKC,KAAL,CAAWC;AAAhB,OAAlB;AACAF,MAAAA,SAAS,CAACG,IAAV,GAAiBR,OAAjB;AACAK,MAAAA,SAAS,CAACD,IAAV,GAAiBA,IAAjB;AACA,WAAKH,QAAL,CAAc;AAAEM,QAAAA,KAAK,EAAEF;AAAT,OAAd;AACH,KAvBkB;;AAAA,SAyBnBI,YAzBmB,GAyBJ,MAAM;AACjB,WAAKC,WAAL,CAAiBC,aAAjB,CAA+B,KAAKb,KAAL,CAAWc,YAAX,CAAwBC,GAAvD,EACKC,IADL,CACUC,QAAQ,IAAI,KAAKd,QAAL,CAAc;AAAEe,QAAAA,KAAK,EAAED,QAAQ,CAACE;AAAlB,OAAd,CADtB,EAEKC,KAFL,CAEWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGH,KA7BkB;;AAAA,SAgCnBG,iBAhCmB,GAgCC,MAAM;AACtB,WAAKb,YAAL;AAEH,KAnCkB;;AAAA,SAqCnBc,gBArCmB,GAqCA,MAAM;AACrB,WAAKd,YAAL;AACA,WAAKV,WAAL,CAAiB,KAAjB;AACA,WAAKI,WAAL,CAAiB,IAAjB,EAAuB,qBAAvB;AACH,KAzCkB;;AAEf,SAAKG,KAAL,GAAa;AACTkB,MAAAA,QAAQ,EAAE;AACNC,QAAAA,MAAM,EAAE,EADF;AAENT,QAAAA,KAAK,EAAE;AAFD,OADD;AAKTT,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE,KADH;AAEHJ,QAAAA,IAAI,EAAE;AAFH,OALE;AASTF,MAAAA,SAAS,EAAE;AATF,KAAb;AAYA,SAAKQ,WAAL,GAAmB,IAAIzB,WAAJ,EAAnB;AACH;;AA6BDyC,EAAAA,MAAM,GAAG;AAELN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWc,YAAX,CAAwBC,GAApC;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWU,KAAvB;AAEA,wBACI,uDACI,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGC,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKjB,WAAL,CAAiB,IAAjB,CAAvB;AAA+C,MAAA,OAAO,EAAC,MAAvD;AAA8D,MAAA,KAAK,EAAE;AAAE4B,QAAAA,YAAY,EAAE;AAAhB,OAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHD,CADJ,eAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,eAWI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAXJ,CADJ,CADJ,eAoBI,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFA,EAKK,KAAKrB,KAAL,CAAWU,KAAX,IAAoB,KAAKV,KAAL,CAAWU,KAAX,CAAiBY,GAAjB,CAAqBC,IAAI,iBAAK,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAAChB;AAApB,OAA6BgB,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA9B,CALzB,CApBJ,eA8BI,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BJ,eAqCI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKvB,KAAL,CAAWJ,SAAxB;AAAmC,MAAA,MAAM,EAAE,MAAM,KAAKH,WAAL,CAAiB,KAAjB,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,gBAAgB,EAAE,KAAKwB,gBAApC;AAAsD,MAAA,UAAU,EAAE,MAAM,KAAKxB,WAAL,CAAiB,KAAjB,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CArCJ,CADJ;AA8CH;;AAjG6B;;AAoGlC,eAAeH,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport './Dashboard.css'\n\nimport CiteService from './../../../service/cite.service'\n\nimport CiteCard from '../cites/CiteCard'\nimport QueryCard from '../query/QueryCard'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Figure from 'react-bootstrap/Figure'\nimport FigureImage from 'react-bootstrap/FigureImage'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport { Link } from 'react-router-dom'\n\n\nclass Dashboard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { \n            userInfo: {\n                querys: [],\n                cites: \"\"\n            },\n            toast: {\n                show: false,\n                text: ''\n            },\n            modalShow: false\n\n        }\n        this.citeService = new CiteService()\n    }\n\n    handleModal = visible => this.setState({ modalShow: visible })\n    handletoast = (visible, text = '') => {\n        const toastCopy = { ...this.state.toast }\n        toastCopy.show = visible\n        toastCopy.text = text\n        this.setState({ toast: toastCopy })\n    }\n\n    getCitesInfo = () => {\n        this.citeService.citesFromUser(this.props.loggedInUser._id)\n            .then(response => this.setState({ cites: response.data }))\n            .catch(err => console.log(err))\n    }\n\n\n    componentDidMount = () => {\n        this.getCitesInfo()\n        \n    }\n\n    finishCiteCreate = () => {\n        this.getCitesInfo()\n        this.handleModal(false)\n        this.handletoast(true, 'Cita creada en BBDD')\n    }\n\n\n    render() {\n\n        console.log(this.props.loggedInUser._id)\n        console.log(this.state.cites)\n\n        return (\n            <>\n                <Container as=\"section\" >\n                    <Row>\n                        <Col>\n                            {/* utilizar con estos botones un renderizado condicional\n                         segun el role del usuario */}\n                         <Button onClick={() => this.handleModal(true)} variant=\"dark\" style={{ marginBottom: '20px' }}>Crear nueva cita</Button>\n\n                        </Col>\n                        <Col>\n                            <Button></Button>\n\n                        </Col>\n                        <Col>\n                            <Button></Button>\n                        </Col>\n\n                    </Row>\n                </Container>\n\n                <Container as=\"section\" >\n\n                <h1>Citas</h1>\n\n\n                    {this.state.cites && this.state.cites.map(cite =>  <CiteCard key={cite._id} {...cite} />)}\n\n\n                </Container>\n\n                <Container as=\"section\" >\n\n                    {/* {this.state.query && this.state.query.map(query => <QueryCard key={query._id} {...query} />)} */}\n\n\n                </Container>\n\n                <Modal show={this.state.modalShow} onHide={() => this.handleModal(false)}>\n                    <Modal.Body>\n                        <CoasterForm finishCiteCreate={this.finishCiteCreate} closeModal={() => this.handleModal(false)} />\n                    </Modal.Body>\n                </Modal>\n            </>\n\n        )\n    }\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}