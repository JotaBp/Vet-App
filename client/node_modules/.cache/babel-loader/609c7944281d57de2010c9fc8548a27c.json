{"ast":null,"code":"import _objectSpread from\"/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./DashboardCliente.css';import PetForm from'../../pets/petsForm/PetForm';import Container from'react-bootstrap/Container';import Button from'react-bootstrap/Button';import Toast from'react-bootstrap/Toast';import Modal from'react-bootstrap/Modal';import PetCardClient from'../../pets/petCardClient/PetCardClient';import PetService from'../../../../service/pet.service';var DashboardClient=/*#__PURE__*/function(_Component){_inherits(DashboardClient,_Component);var _super=_createSuper(DashboardClient);function DashboardClient(props){var _this;_classCallCheck(this,DashboardClient);_this=_super.call(this,props);_this.handleModal=function(visible){console.log(\"esto es el handlemodal \".concat(visible));_this.setState({modalShow:visible});};_this.handletoast=function(visible){var text=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';var toastCopy=_objectSpread({},_this.state.toast);toastCopy.show=visible;toastCopy.text=text;_this.setState({toast:toastCopy});};_this.getPetsFromClient=function(idClient){_this.petService.getPetsFromClient(idClient).then(function(response){return _this.setState({userInfo:_objectSpread(_objectSpread({},_this.state.userInfo),{},{pets:response.data})});}).catch(function(err){return console.log(err);});};_this.finishPetCreate=function(){_this.getPetsFromClient(_this.props.loggedInUser._id);_this.handleModal(false);_this.handletoast(true,'Has creado una nueva mascota');};_this.componentDidMount=function(){_this.getPetsFromClient(_this.props.loggedInUser._id);};_this.state={userInfo:{id:_this.props.loggedInUser._id,pets:[]},toast:{show:false,text:''},modalShow:false};_this.petService=new PetService();return _this;}_createClass(DashboardClient,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Container,{as:\"section\",className:\"content-dashboard\"},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return _this2.handleModal(true);},variant:\"dark\"},\"Crear nueva mascota\"),/*#__PURE__*/React.createElement(Toast,{className:\"toast-window\",onClose:function onClose(){return _this2.handletoast(false);},show:this.state.toast.show,delay:3000},/*#__PURE__*/React.createElement(Toast.Header,null,/*#__PURE__*/React.createElement(\"strong\",{className:\"mr-auto\"},\"Mensaje\")),/*#__PURE__*/React.createElement(Toast.Body,null,this.state.toast.text)),this.state.userInfo.pets&&this.state.userInfo.pets.map(function(pet,idx){return/*#__PURE__*/React.createElement(PetCardClient,Object.assign({index:idx,key:pet._id},pet,{reloadPets:function reloadPets(){return _this2.getPetsFromClient(_this2.state.userInfo.id);}}));})),/*#__PURE__*/React.createElement(Modal,{className:\"modal-window\",show:this.state.modalShow,onHide:function onHide(){return _this2.handleModal(false);}},/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(PetForm,{finishPetPost:this.finishPetCreate,ownerID:this.props.loggedInUser._id,closeModal:function closeModal(){return _this2.handleModal(false);}}))));}}]);return DashboardClient;}(Component);export default DashboardClient;","map":{"version":3,"sources":["/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/dashboard/dashboardClient/DashboardClient.js"],"names":["React","Component","PetForm","Container","Button","Toast","Modal","PetCardClient","PetService","DashboardClient","props","handleModal","visible","console","log","setState","modalShow","handletoast","text","toastCopy","state","toast","show","getPetsFromClient","idClient","petService","then","response","userInfo","pets","data","catch","err","finishPetCreate","loggedInUser","_id","componentDidMount","id","map","pet","idx"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport './DashboardCliente.css'\n\nimport PetForm from '../../pets/petsForm/PetForm'\n\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Toast from 'react-bootstrap/Toast'\nimport Modal from 'react-bootstrap/Modal'\n\nimport PetCardClient from '../../pets/petCardClient/PetCardClient'\n\nimport PetService from '../../../../service/pet.service'\n\n\nclass DashboardClient extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            userInfo: {\n                id: this.props.loggedInUser._id,\n                pets: []\n            },\n            toast: {\n                show: false,\n                text: ''\n            },\n            modalShow: false,\n\n        }\n\n        this.petService = new PetService()\n\n\n    }\n\n    handleModal = visible => {\n        console.log(`esto es el handlemodal ${visible}`)\n        this.setState({ modalShow: visible })\n    }\n\n    handletoast = (visible, text = '') => {\n        const toastCopy = { ...this.state.toast }\n        toastCopy.show = visible\n        toastCopy.text = text\n        this.setState({ toast: toastCopy })\n    }\n\n    getPetsFromClient = (idClient) => {\n        this.petService.getPetsFromClient(idClient)\n            .then(response =>  this.setState({ userInfo: { ...this.state.userInfo, pets: response.data } }))\n            .catch(err => console.log(err))\n    }\n\n    finishPetCreate = () => {\n        this.getPetsFromClient(this.props.loggedInUser._id)\n        this.handleModal(false)\n        this.handletoast(true, 'Has creado una nueva mascota')\n    }\n\n    componentDidMount = () => {\n        this.getPetsFromClient(this.props.loggedInUser._id)\n    }\n\n\n    render() {\n\n        return (\n            <>\n\n                <Container as=\"section\" className=\"content-dashboard\">\n\n                    <Button onClick={() => this.handleModal(true)} variant=\"dark\">Crear nueva mascota</Button>\n\n                    <Toast className=\"toast-window\" onClose={() => this.handletoast(false)} show={this.state.toast.show} delay={3000} >\n                        <Toast.Header>\n\n                            <strong className=\"mr-auto\">Mensaje</strong>\n                        </Toast.Header>\n                        <Toast.Body>{this.state.toast.text}</Toast.Body>\n                    </Toast>\n\n\n                    {this.state.userInfo.pets && this.state.userInfo.pets.map((pet, idx) =>{\n\n                        return (<PetCardClient\n                            index= {idx}\n                            key={pet._id} {...pet}\n                            reloadPets={() => this.getPetsFromClient(this.state.userInfo.id)}\n\n                        />)\n                        })}\n\n                </Container>\n\n                <Modal className=\"modal-window\" show={this.state.modalShow} onHide={() => this.handleModal(false)}>\n                    <Modal.Body>\n                        <PetForm finishPetPost={this.finishPetCreate} ownerID={this.props.loggedInUser._id} closeModal={() => this.handleModal(false)} />\n                    </Modal.Body>\n                </Modal>\n\n\n\n\n\n            </>\n\n        )\n    }\n}\n\nexport default DashboardClient"]},"metadata":{},"sourceType":"module"}