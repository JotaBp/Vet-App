{"ast":null,"code":"var _jsxFileName = \"/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/profile/profileClient/ProfileClient.js\";\nimport React, { Component } from 'react';\nimport './ProfileClient.css';\nimport ProfileService from '../../../../service/profile.service';\nimport PetCard from '../../pets/petsList/PetCard';\nimport PetForm from '../../pets/petsForm/PetForm';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Figure from 'react-bootstrap/Figure';\nimport FigureImage from 'react-bootstrap/FigureImage';\nimport Toast from 'react-bootstrap/Toast';\nimport Modal from 'react-bootstrap/Modal';\n\nclass ProfileClient extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleModal = visible => this.setState({\n      modalShow: visible\n    });\n\n    this.handletoast = (visible, text = '') => {\n      const toastCopy = { ...this.state.toast\n      };\n      toastCopy.show = visible;\n      toastCopy.text = text;\n      this.setState({\n        toast: toastCopy\n      });\n    };\n\n    this.getDetailsProfile = () => {\n      this.profileService.getProfile(this.props.loggedInUser._id).then(response => this.setState(this.userInforesponse.data)).catch(err => console.log(err));\n    };\n\n    this.componentDidMount = () => {\n      this.getDetailsProfile();\n    };\n\n    this.finishPetCreate = () => {\n      this.getDetailsProfile();\n      this.handleModal(false);\n      this.handletoast(true, 'Has creado una nueva mascota');\n    };\n\n    this.state = {\n      userInfo: {\n        profileInfo: {\n          username: '',\n          surname: '',\n          email: '',\n          password: '',\n          profilePicPath: '',\n          address: '',\n          phoneNumber: '',\n          status: '',\n          pets: [],\n          queryClient: [],\n          citeHospital: []\n        }\n      },\n      toast: {\n        show: false,\n        text: ''\n      },\n      modalShow: false,\n      errorMessage: ''\n    };\n    this.profileService = new ProfileService();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, \"Perfil\"), /*#__PURE__*/React.createElement(Figure, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FigureImage, {\n      alt: \"Foto de perfil del usuario\",\n      src: this.state.profileInfo.profilePicPath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    }, this.state.profileInfo.username), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, this.state.profileInfo.email), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, this.state.profileInfo.address), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, this.state.profileInfo.emaphoneNumberil), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, this.state.profileInfo.status), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, \"Actualizar\")), /*#__PURE__*/React.createElement(Col, {\n      md: {\n        span: 6\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleModal(true),\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, \"Crear nueva mascota\"), this.state.profileInfo.pets && this.state.profileInfo.pets.map(pet => /*#__PURE__*/React.createElement(PetCard, Object.assign({\n      key: pet._id\n    }, pet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 100\n      }\n    })))))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.modalShow,\n      onHide: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PetForm, {\n      finishPetPost: this.finishPetCreate,\n      ownerID: this.props.loggedInUser._id,\n      closeModal: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Toast, {\n      onClose: () => this.handletoast(false),\n      show: this.state.toast.show,\n      delay: 3000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Toast.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, \"Mensaje\")), /*#__PURE__*/React.createElement(Toast.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, this.state.toast.text)));\n  }\n\n}\n\nexport default ProfileClient;","map":{"version":3,"sources":["/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/profile/profileClient/ProfileClient.js"],"names":["React","Component","ProfileService","PetCard","PetForm","Container","Row","Col","Button","Figure","FigureImage","Toast","Modal","ProfileClient","constructor","props","handleModal","visible","setState","modalShow","handletoast","text","toastCopy","state","toast","show","getDetailsProfile","profileService","getProfile","loggedInUser","_id","then","response","userInforesponse","data","catch","err","console","log","componentDidMount","finishPetCreate","userInfo","profileInfo","username","surname","email","password","profilePicPath","address","phoneNumber","status","pets","queryClient","citeHospital","errorMessage","render","emaphoneNumberil","span","map","pet"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport './ProfileClient.css'\n\nimport ProfileService from '../../../../service/profile.service'\n\nimport PetCard from '../../pets/petsList/PetCard'\nimport PetForm from '../../pets/petsForm/PetForm'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport Figure from 'react-bootstrap/Figure'\nimport FigureImage from 'react-bootstrap/FigureImage'\nimport Toast from 'react-bootstrap/Toast'\nimport Modal from 'react-bootstrap/Modal'\n\n\nclass ProfileClient extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            userInfo:{\n                profileInfo: {\n                username: '',\n                surname: '',\n                email: '',\n                password: '',\n                profilePicPath: '',\n                address: '',\n                phoneNumber: '',\n                status: '',\n                pets: [],\n                queryClient: [],\n                citeHospital: []\n            }}\n            ,\n            toast: {\n                show: false,\n                text: ''\n            },\n            modalShow: false,\n            errorMessage: ''\n        }\n        this.profileService = new ProfileService()\n    }\n\n    handleModal = visible => this.setState({ modalShow: visible })\n    handletoast = (visible, text = '') => {\n        const toastCopy = { ...this.state.toast }\n        toastCopy.show = visible\n        toastCopy.text = text\n        this.setState({ toast: toastCopy })\n    }\n\n    getDetailsProfile = () => {\n        this.profileService.getProfile(this.props.loggedInUser._id)\n            .then(response => this.setState( this.userInforesponse.data ))\n            .catch(err => console.log(err))\n    }\n\n\n    componentDidMount = () => {\n        this.getDetailsProfile()\n    }\n\n    finishPetCreate = () => {\n        this.getDetailsProfile()\n        this.handleModal(false)\n        this.handletoast(true, 'Has creado una nueva mascota')\n    }\n\n\n\n    render() {\n\n        return (\n\n            <>\n                <Container>\n\n                    <Row>\n                        <Col>\n\n                            <h1>Perfil</h1>\n\n                            <Figure>\n\n                                <FigureImage\n\n                                    alt=\"Foto de perfil del usuario\"\n                                    src={this.state.profileInfo.profilePicPath}\n                                />\n\n                            </Figure>\n\n                            <h3>{this.state.profileInfo.username}</h3>\n\n                            <h3>{this.state.profileInfo.email}</h3>\n                            <h3>{this.state.profileInfo.address}</h3>\n                            <h3>{this.state.profileInfo.emaphoneNumberil}</h3>\n                            <h3>{this.state.profileInfo.status}</h3>\n\n                            <Button>Actualizar</Button>\n\n                        </Col>\n\n                        <Col md={{ span: 6}}>\n\n                            <Button onClick={() => this.handleModal(true)} variant=\"dark\">Crear nueva mascota</Button>\n\n                            {this.state.profileInfo.pets && this.state.profileInfo.pets.map(pet => <PetCard key={pet._id} {...pet} />)}\n\n\n\n\n                        </Col>\n                    </Row>\n\n                </Container>\n\n                <Modal show={this.state.modalShow} onHide={() => this.handleModal(false)}>\n                    <Modal.Body>\n                        <PetForm finishPetPost={this.finishPetCreate} ownerID={this.props.loggedInUser._id} closeModal={() => this.handleModal(false)} />\n                    </Modal.Body>\n                </Modal>\n\n                <Toast onClose={() => this.handletoast(false)} show={this.state.toast.show} delay={3000} >\n                    <Toast.Header>\n\n                        <strong className=\"mr-auto\">Mensaje</strong>\n                    </Toast.Header>\n                    <Toast.Body>{this.state.toast.text}</Toast.Body>\n                </Toast>\n\n            </>\n        )\n    }\n}\n\nexport default ProfileClient"]},"metadata":{},"sourceType":"module"}