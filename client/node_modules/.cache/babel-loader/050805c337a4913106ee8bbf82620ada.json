{"ast":null,"code":"var _jsxFileName = \"/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/dashboard/dashboardClient/DashboardClient.js\";\nimport React, { Component } from 'react';\nimport './DashboardCliente.css';\nimport PetForm from '../../pets/petsForm/PetForm';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Toast from 'react-bootstrap/Toast';\nimport Modal from 'react-bootstrap/Modal';\nimport PetCardClient from '../../pets/petCardClient/PetCardClient';\nimport PetService from '../../../../service/pet.service';\n\nclass DashboardClient extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleModal = visible => this.setState({\n      modalShow: visible\n    });\n\n    this.handletoast = (visible, text = '') => {\n      const toastCopy = { ...this.state.toast\n      };\n      toastCopy.show = visible;\n      toastCopy.text = text;\n      this.setState({\n        toast: toastCopy\n      });\n    };\n\n    this.getPetsFromClient = idClient => {\n      this.petService.getPetsFromClient(idClient).then(response => {\n        console.log(response.data);\n        return this.setState({\n          userInfo: { ...this.state.userInfo,\n            pets: response.data\n          }\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.finishPetCreate = () => {\n      this.getPetsFromClient(this.props.loggedInUser._id);\n      this.handleModal(false);\n      this.handletoast(true, 'Has creado una nueva mascota');\n    };\n\n    this.componentDidMount = () => {\n      this.getPetsFromClient(this.props.loggedInUser._id);\n    };\n\n    this.finishUpdatedPetPost = () => {\n      this.getPetsFromClient(this.props.loggedInUser._id);\n    };\n\n    this.updatePetInfo = (newPetInfo, idx) => {\n      const petsInfo = this.state.userInfo.pets;\n      petsInfo[idx] = newPetInfo;\n      this.setState({\n        userInfo: { ...this.state.userInfo,\n          pets: petsInfo\n        }\n      });\n    };\n\n    this.state = {\n      userInfo: {\n        id: this.props.loggedInUser._id,\n        pets: []\n      },\n      toast: {\n        show: false,\n        text: ''\n      },\n      modalShow: false\n    };\n    this.petService = new PetService();\n  }\n\n  render() {\n    console.log(this.props.loggedInUser._id);\n    console.log(this.state.userInfo.id);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      as: \"section\",\n      className: \"content-dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleModal(true),\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, \" Crear nueva mascota \"), /*#__PURE__*/React.createElement(Toast, {\n      onClose: () => this.handletoast(false),\n      show: this.state.toast.show,\n      delay: 3000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Toast.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, \" Mensaje \"), \" \"), \" \", /*#__PURE__*/React.createElement(Toast.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 32\n      }\n    }, \" \", this.state.toast.text, \" \"), \" \"), this.state.userInfo.pets && this.state.userInfo.pets.map(pet => /*#__PURE__*/React.createElement(PetCardClient, Object.assign({\n      key: pet._id\n    }, pet, {\n      reloadPets: () => this.getPetsFromClient(this.state.userInfo.id),\n      finishUpdatePetPost: this.finishUpdatedPetPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Modal, {\n      className: \"modal-window\",\n      show: this.state.modalShow,\n      onHide: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(PetForm, {\n      finishPetPost: this.finishPetCreate,\n      ownerID: this.props.loggedInUser._id,\n      closeModal: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }), \" \"), \" \"));\n  }\n\n}\n\nexport default DashboardClient;","map":{"version":3,"sources":["/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/dashboard/dashboardClient/DashboardClient.js"],"names":["React","Component","PetForm","Container","Button","Toast","Modal","PetCardClient","PetService","DashboardClient","constructor","props","handleModal","visible","setState","modalShow","handletoast","text","toastCopy","state","toast","show","getPetsFromClient","idClient","petService","then","response","console","log","data","userInfo","pets","catch","err","finishPetCreate","loggedInUser","_id","componentDidMount","finishUpdatedPetPost","updatePetInfo","newPetInfo","idx","petsInfo","id","render","map","pet"],"mappings":";AAAA,OAAOA,KAAP,IACIC,SADJ,QAEO,OAFP;AAIA,OAAO,wBAAP;AAEA,OAAOC,OAAP,MAAoB,6BAApB;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,OAAOC,aAAP,MAA0B,wCAA1B;AAEA,OAAOC,UAAP,MAAuB,iCAAvB;;AAGA,MAAMC,eAAN,SAA8BR,SAA9B,CAAwC;AAEpCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAoBnBC,WApBmB,GAoBLC,OAAO,IAAI,KAAKC,QAAL,CAAc;AACnCC,MAAAA,SAAS,EAAEF;AADwB,KAAd,CApBN;;AAAA,SAuBnBG,WAvBmB,GAuBL,CAACH,OAAD,EAAUI,IAAI,GAAG,EAAjB,KAAwB;AAClC,YAAMC,SAAS,GAAG,EACd,GAAG,KAAKC,KAAL,CAAWC;AADA,OAAlB;AAGAF,MAAAA,SAAS,CAACG,IAAV,GAAiBR,OAAjB;AACAK,MAAAA,SAAS,CAACD,IAAV,GAAiBA,IAAjB;AACA,WAAKH,QAAL,CAAc;AACVM,QAAAA,KAAK,EAAEF;AADG,OAAd;AAGH,KAhCkB;;AAAA,SAkCnBI,iBAlCmB,GAkCEC,QAAD,IAAc;AAC9B,WAAKC,UAAL,CAAgBF,iBAAhB,CAAkCC,QAAlC,EACKE,IADL,CACUC,QAAQ,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,eAAO,KAAKf,QAAL,CAAc;AACjBgB,UAAAA,QAAQ,EAAE,EACN,GAAG,KAAKX,KAAL,CAAWW,QADR;AAENC,YAAAA,IAAI,EAAEL,QAAQ,CAACG;AAFT;AADO,SAAd,CAAP;AAMH,OATL,EAUKG,KAVL,CAUWC,GAAG,IAAIN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAVlB;AAWH,KA9CkB;;AAAA,SAgDnBC,eAhDmB,GAgDD,MAAM;AACpB,WAAKZ,iBAAL,CAAuB,KAAKX,KAAL,CAAWwB,YAAX,CAAwBC,GAA/C;AACA,WAAKxB,WAAL,CAAiB,KAAjB;AACA,WAAKI,WAAL,CAAiB,IAAjB,EAAuB,8BAAvB;AACH,KApDkB;;AAAA,SAsDnBqB,iBAtDmB,GAsDC,MAAM;AACtB,WAAKf,iBAAL,CAAuB,KAAKX,KAAL,CAAWwB,YAAX,CAAwBC,GAA/C;AACH,KAxDkB;;AAAA,SA0DnBE,oBA1DmB,GA0DI,MAAM;AACzB,WAAKhB,iBAAL,CAAuB,KAAKX,KAAL,CAAWwB,YAAX,CAAwBC,GAA/C;AAEH,KA7DkB;;AAAA,SA+DnBG,aA/DmB,GA+DH,CAACC,UAAD,EAAaC,GAAb,KAAqB;AACjC,YAAMC,QAAQ,GAAG,KAAKvB,KAAL,CAAWW,QAAX,CAAoBC,IAArC;AACAW,MAAAA,QAAQ,CAACD,GAAD,CAAR,GAAgBD,UAAhB;AAEA,WAAK1B,QAAL,CAAc;AACVgB,QAAAA,QAAQ,EAAE,EACN,GAAG,KAAKX,KAAL,CAAWW,QADR;AAENC,UAAAA,IAAI,EAAEW;AAFA;AADA,OAAd;AAOH,KA1EkB;;AAEf,SAAKvB,KAAL,GAAa;AACTW,MAAAA,QAAQ,EAAE;AACNa,QAAAA,EAAE,EAAE,KAAKhC,KAAL,CAAWwB,YAAX,CAAwBC,GADtB;AAENL,QAAAA,IAAI,EAAE;AAFA,OADD;AAKTX,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE,KADH;AAEHJ,QAAAA,IAAI,EAAE;AAFH,OALE;AASTF,MAAAA,SAAS,EAAE;AATF,KAAb;AAaA,SAAKS,UAAL,GAAkB,IAAIhB,UAAJ,EAAlB;AAGH;;AA2DDoC,EAAAA,MAAM,GAAG;AAEDjB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWwB,YAAX,CAAwBC,GAApC;AAEAT,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWW,QAAX,CAAoBa,EAAhC;AAIA,wBAAS,uDAGL,oBACA,SADA;AACU,MAAA,EAAE,EAAG,SADf;AAEA,MAAA,SAAS,EAAG,mBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIA,oBACA,MADA;AACO,MAAA,OAAO,EACV,MAAM,KAAK/B,WAAL,CAAiB,IAAjB,CAFV;AAIA,MAAA,OAAO,EAAG,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAJA,eAUA,oBACA,KADA;AACM,MAAA,OAAO,EACT,MAAM,KAAKI,WAAL,CAAiB,KAAjB,CAFV;AAIA,MAAA,IAAI,EACA,KAAKG,KAAL,CAAWC,KAAX,CAAiBC,IALrB;AAOA,MAAA,KAAK,EACD,IARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUA,oBACA,KADA,CACM,MADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGA;AACO,MAAA,SAAS,EAAG,SADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHA,MAVA,oBAee,oBACf,KADe,CACT,IADS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAEX,KAAKF,KAAL,CAAWC,KAAX,CAAiBH,IAFN,MAff,MAVA,EAiCI,KAAKE,KAAL,CAAWW,QAAX,CAAoBC,IAApB,IAA4B,KAAKZ,KAAL,CAAWW,QAAX,CAAoBC,IAApB,CAAyBc,GAAzB,CAA6BC,GAAG,iBAExD,oBACA,aADA;AACc,MAAA,GAAG,EACbA,GAAG,CAACV;AAFR,OAIOU,GAJP;AAMA,MAAA,UAAU,EACN,MAAM,KAAKxB,iBAAL,CAAuB,KAAKH,KAAL,CAAWW,QAAX,CAAoBa,EAA3C,CAPV;AASA,MAAA,mBAAmB,EACf,KAAKL,oBAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFwB,CAjChC,CAHK,eAuDG,oBACA,KADA;AACM,MAAA,SAAS,EAAG,cADlB;AAEA,MAAA,IAAI,EACA,KAAKnB,KAAL,CAAWJ,SAHf;AAKA,MAAA,MAAM,EACF,MAAM,KAAKH,WAAL,CAAiB,KAAjB,CANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQA,oBACA,KADA,CACM,IADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBACA,OADA;AACQ,MAAA,aAAa,EACjB,KAAKsB,eAFT;AAIA,MAAA,OAAO,EACH,KAAKvB,KAAL,CAAWwB,YAAX,CAAwBC,GAL5B;AAOA,MAAA,UAAU,EACN,MAAM,KAAKxB,WAAL,CAAiB,KAAjB,CARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,MARA,MAvDH,CAAT;AAuFK;;AA9KuB;;AAiL5B,eAAeH,eAAf","sourcesContent":["import React, {\n    Component\n} from 'react'\n\nimport './DashboardCliente.css'\n\nimport PetForm from '../../pets/petsForm/PetForm'\n\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Toast from 'react-bootstrap/Toast'\nimport Modal from 'react-bootstrap/Modal'\n\nimport PetCardClient from '../../pets/petCardClient/PetCardClient'\n\nimport PetService from '../../../../service/pet.service'\n\n\nclass DashboardClient extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            userInfo: {\n                id: this.props.loggedInUser._id,\n                pets: []\n            },\n            toast: {\n                show: false,\n                text: ''\n            },\n            modalShow: false,\n\n        }\n\n        this.petService = new PetService()\n\n\n    }\n\n    handleModal = visible => this.setState({\n        modalShow: visible\n    })\n    handletoast = (visible, text = '') => {\n        const toastCopy = {\n            ...this.state.toast\n        }\n        toastCopy.show = visible\n        toastCopy.text = text\n        this.setState({\n            toast: toastCopy\n        })\n    }\n\n    getPetsFromClient = (idClient) => {\n        this.petService.getPetsFromClient(idClient)\n            .then(response => {\n                console.log(response.data)\n                return this.setState({\n                    userInfo: {\n                        ...this.state.userInfo,\n                        pets: response.data\n                    }\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    finishPetCreate = () => {\n        this.getPetsFromClient(this.props.loggedInUser._id)\n        this.handleModal(false)\n        this.handletoast(true, 'Has creado una nueva mascota')\n    }\n\n    componentDidMount = () => {\n        this.getPetsFromClient(this.props.loggedInUser._id)\n    }\n\n    finishUpdatedPetPost = () => {\n        this.getPetsFromClient(this.props.loggedInUser._id)\n\n    }\n\n    updatePetInfo = (newPetInfo, idx) => {\n        const petsInfo = this.state.userInfo.pets\n        petsInfo[idx] = newPetInfo\n\n        this.setState({\n            userInfo: {\n                ...this.state.userInfo,\n                pets: petsInfo\n            }\n        })\n\n    }\n\n\n    render() {\n\n            console.log(this.props.loggedInUser._id)\n\n            console.log(this.state.userInfo.id)\n\n\n\n            return ( <\n                >\n\n                <\n                Container as = \"section\"\n                className = \"content-dashboard\" >\n\n                <\n                Button onClick = {\n                    () => this.handleModal(true)\n                }\n                variant = \"dark\" > Crear nueva mascota < /Button>\n\n                <\n                Toast onClose = {\n                    () => this.handletoast(false)\n                }\n                show = {\n                    this.state.toast.show\n                }\n                delay = {\n                    3000\n                } >\n                <\n                Toast.Header >\n\n                <\n                strong className = \"mr-auto\" > Mensaje < /strong> <\n                /Toast.Header> <\n                Toast.Body > {\n                    this.state.toast.text\n                } < /Toast.Body> <\n                /Toast>\n\n\n                {\n                    this.state.userInfo.pets && this.state.userInfo.pets.map(pet =>\n\n                        <\n                        PetCardClient key = {\n                            pet._id\n                        } {\n                            ...pet\n                        }\n                        reloadPets = {\n                            () => this.getPetsFromClient(this.state.userInfo.id)\n                        }\n                        finishUpdatePetPost = {\n                            this.finishUpdatedPetPost\n                        }\n                        /> )}\n\n                        <\n                        /Container>\n\n                        <\n                        Modal className = \"modal-window\"\n                        show = {\n                            this.state.modalShow\n                        }\n                        onHide = {\n                            () => this.handleModal(false)\n                        } >\n                        <\n                        Modal.Body >\n                        <\n                        PetForm finishPetPost = {\n                            this.finishPetCreate\n                        }\n                        ownerID = {\n                            this.props.loggedInUser._id\n                        }\n                        closeModal = {\n                            () => this.handleModal(false)\n                        }\n                        /> <\n                        /Modal.Body> <\n                        /Modal>\n\n\n\n\n\n                        <\n                        />\n\n                    )\n                }\n            }\n\n            export default DashboardClient"]},"metadata":{},"sourceType":"module"}