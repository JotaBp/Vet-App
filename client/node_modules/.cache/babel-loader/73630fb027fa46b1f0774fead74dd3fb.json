{"ast":null,"code":"var _jsxFileName = \"/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/dashboard/dashboardHospital/DashboardHospital.js\";\nimport React, { Component } from 'react';\nimport CiteService from '../../../../service/cite.service';\nimport QueryService from '../../../../service/query.service';\nimport CiteCard from '../../cites/citesCard/CiteCard';\nimport QueryCard from '../../query/queryCard/QueryCard';\nimport CiteForm from '../../cites/citesForm/CiteForm';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Figure from 'react-bootstrap/Figure';\nimport FigureImage from 'react-bootstrap/FigureImage';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Toast from 'react-bootstrap/Toast';\nimport Modal from 'react-bootstrap/Modal';\nimport { Link } from 'react-router-dom';\n\nclass DashboardHospital extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleModal = visible => this.setState({\n      modalShow: visible\n    });\n\n    this.handletoast = (visible, text = '') => {\n      const toastCopy = { ...this.state.toast\n      };\n      toastCopy.show = visible;\n      toastCopy.text = text;\n      this.setState({\n        toast: toastCopy\n      });\n    };\n\n    this.getCitesInfo = () => {\n      this.citeService.citeFromHospital(this.props.loggedInUser._id).then(response => this.setState({\n        cites: response.data\n      })).catch(err => console.log(err));\n    };\n\n    this.getQueryInfo = () => {\n      this.queryService.queryFromHospital(this.props.loggedInUser._id).then(response => this.setState({\n        querys: response.data\n      })).catch(err => console.log(err));\n    };\n\n    this.componentDidMount = () => {\n      this.getCitesInfo();\n      this.getQueryInfo();\n    };\n\n    this.finishCiteCreate = () => {\n      this.getCitesInfo();\n      this.handleModal(false);\n      this.handletoast(true, 'Cita creada en BBDD');\n    };\n\n    this.state = {\n      userInfo: {\n        querys: \"\",\n        cites: \"\"\n      },\n      toast: {\n        show: false,\n        text: ''\n      },\n      modalShow: false\n    };\n    this.citeService = new CiteService();\n    this.queryService = new QueryService();\n  }\n\n  // 1. Formulario creaci√≥n de query en el Dashboard Cliente\n  // 2. Ruta del back que crea la query y en el then la vincula al user y al hospital (Revisar lo hecho en el cite.routes)\n  // 3. Preparar formulario respuesta del hospital\n  // 4. Ruta del back respuesta del hospital que hace un findByIdAndUpdate y actualiza el campo de answer\n  // 5. En este punto, el usuario y el hospital deben ver la respuesta (preparar el campo en front con render condicional tipo if query.answer && <p>{answer}</p>)\n  render() {\n    console.log(this.props.loggedInUser._id);\n    console.log(this.state.cites);\n    console.log(this.state.querys);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      as: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleModal(true),\n      variant: \"dark\",\n      style: {\n        marginBottom: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, \" Crear nueva cita \")), \" \", /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, \" \")), \" \", /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, \" \"), \" \")), \" \"), /*#__PURE__*/React.createElement(Container, {\n      as: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, \" Consultas Pendientes \")), /*#__PURE__*/React.createElement(Container, {\n      as: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, \" Citas \"), this.state.cites && this.state.cites.map(cite => /*#__PURE__*/React.createElement(CiteCard, Object.assign({\n      key: cite._id\n    }, cite, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 74\n      }\n    })))), /*#__PURE__*/React.createElement(Container, {\n      as: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 29\n      }\n    }, \" Consultas \"), this.state.querys && this.state.querys.map(query => /*#__PURE__*/React.createElement(QueryCard, Object.assign({\n      key: query._id\n    }, query, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 85\n      }\n    })))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.modalShow,\n      onHide: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CiteForm, {\n      finishCitePost: this.finishCiteCreate,\n      hospitalID: this.props.loggedInUser._id,\n      pets: this.props.loggedInUser.pets,\n      closeModal: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 37\n      }\n    }), \" \"), \" \"), /*#__PURE__*/React.createElement(Toast, {\n      onClose: () => this.handletoast(false),\n      show: this.state.toast.show,\n      delay: 3000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Toast.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 37\n      }\n    }, \" Mensaje \"), \" \"), \" \", /*#__PURE__*/React.createElement(Toast.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 52\n      }\n    }, \" \", this.state.toast.text, \" \"), \" \"), \" \");\n  }\n\n}\n\nexport default DashboardHospital;","map":{"version":3,"sources":["/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/dashboard/dashboardHospital/DashboardHospital.js"],"names":["React","Component","CiteService","QueryService","CiteCard","QueryCard","CiteForm","Container","Row","Col","Figure","FigureImage","Form","Button","Toast","Modal","Link","DashboardHospital","constructor","props","handleModal","visible","setState","modalShow","handletoast","text","toastCopy","state","toast","show","getCitesInfo","citeService","citeFromHospital","loggedInUser","_id","then","response","cites","data","catch","err","console","log","getQueryInfo","queryService","queryFromHospital","querys","componentDidMount","finishCiteCreate","userInfo","render","marginBottom","map","cite","query","pets"],"mappings":"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","sourcesContent":["import React, {\n    Component\n} from 'react'\n\nimport CiteService from '../../../../service/cite.service'\nimport QueryService from '../../../../service/query.service'\n\n\nimport CiteCard from '../../cites/citesCard/CiteCard'\nimport QueryCard from '../../query/queryCard/QueryCard'\nimport CiteForm from '../../cites/citesForm/CiteForm'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Figure from 'react-bootstrap/Figure'\nimport FigureImage from 'react-bootstrap/FigureImage'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Toast from 'react-bootstrap/Toast'\nimport Modal from 'react-bootstrap/Modal'\n\nimport {\n    Link\n} from 'react-router-dom'\n\n\nclass DashboardHospital extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            userInfo: {\n                querys: \"\",\n                cites: \"\"\n            },\n            toast: {\n                show: false,\n                text: ''\n            },\n            modalShow: false\n\n        }\n        this.citeService = new CiteService()\n        this.queryService = new QueryService()\n    }\n\n    handleModal = visible => this.setState({\n        modalShow: visible\n    })\n    handletoast = (visible, text = '') => {\n        const toastCopy = {\n            ...this.state.toast\n        }\n        toastCopy.show = visible\n        toastCopy.text = text\n        this.setState({\n            toast: toastCopy\n        })\n    }\n\n    getCitesInfo = () => {\n        this.citeService.citeFromHospital(this.props.loggedInUser._id)\n            .then(response => this.setState({\n                cites: response.data\n            }))\n            .catch(err => console.log(err))\n    }\n\n    getQueryInfo = () => {\n        this.queryService.queryFromHospital(this.props.loggedInUser._id)\n            .then(response => this.setState({\n                querys: response.data\n            }))\n            .catch(err => console.log(err))\n    }\n\n\n    componentDidMount = () => {\n        this.getCitesInfo()\n        this.getQueryInfo()\n    }\n\n    finishCiteCreate = () => {\n        this.getCitesInfo()\n        this.handleModal(false)\n        this.handletoast(true, 'Cita creada en BBDD')\n    }\n\n\n    // 1. Formulario creaci√≥n de query en el Dashboard Cliente\n    // 2. Ruta del back que crea la query y en el then la vincula al user y al hospital (Revisar lo hecho en el cite.routes)\n    // 3. Preparar formulario respuesta del hospital\n    // 4. Ruta del back respuesta del hospital que hace un findByIdAndUpdate y actualiza el campo de answer\n    // 5. En este punto, el usuario y el hospital deben ver la respuesta (preparar el campo en front con render condicional tipo if query.answer && <p>{answer}</p>)\n\n\n\n    render() {\n\n            console.log(this.props.loggedInUser._id)\n            console.log(this.state.cites)\n            console.log(this.state.querys)\n\n            return ( <\n                    >\n                    <\n                    Container as = \"section\" >\n                    <\n                    Row >\n                    <\n                    Col >\n\n                    <\n                    Button onClick = {\n                        () => this.handleModal(true)\n                    }\n                    variant = \"dark\"\n                    style = {\n                        {\n                            marginBottom: '20px'\n                        }\n                    } > Crear nueva cita < /Button>\n\n                    <\n                    /Col> <\n                    Col >\n                    <\n                    Button > < /Button>\n\n                    <\n                    /Col> <\n                    Col >\n                    <\n                    Button > < /Button> <\n                    /Col>\n\n                    <\n                    /Row> <\n                    /Container>\n\n                    <\n                    Container as = \"section\" >\n\n                    <\n                    h1 > Consultas Pendientes < /h1>\n\n                    <\n                    /Container>\n\n                    <\n                    Container as = \"section\" >\n\n                    <\n                    h1 > Citas < /h1>\n\n\n                    {\n                        this.state.cites && this.state.cites.map(cite => < CiteCard key = {\n                                cite._id\n                            } {\n                                ...cite\n                            }\n                            />)}\n\n\n                            <\n                            /Container>\n\n                            <\n                            Container as = \"section\" >\n\n                            <\n                            h1 > Consultas < /h1>\n\n\n                            {\n                                this.state.querys && this.state.querys.map(query => < QueryCard key = {\n                                        query._id\n                                    } {\n                                        ...query\n                                    }\n                                    />)}\n\n\n                                    <\n                                    /Container>\n\n                                    <\n                                    Modal show = {\n                                        this.state.modalShow\n                                    }\n                                    onHide = {\n                                        () => this.handleModal(false)\n                                    } >\n                                    <\n                                    Modal.Body >\n                                    <\n                                    CiteForm finishCitePost = {\n                                        this.finishCiteCreate\n                                    }\n                                    hospitalID = {\n                                        this.props.loggedInUser._id\n                                    }\n                                    pets = {\n                                        this.props.loggedInUser.pets\n                                    }\n                                    closeModal = {\n                                        () => this.handleModal(false)\n                                    }\n                                    /> <\n                                    /Modal.Body> <\n                                    /Modal>\n\n                                    <\n                                    Toast onClose = {\n                                        () => this.handletoast(false)\n                                    }\n                                    show = {\n                                        this.state.toast.show\n                                    }\n                                    delay = {\n                                        3000\n                                    } >\n                                    <\n                                    Toast.Header >\n                                    <\n                                    strong className = \"mr-auto\" > Mensaje < /strong> <\n                                    /Toast.Header> <\n                                    Toast.Body > {\n                                        this.state.toast.text\n                                    } < /Toast.Body> <\n                                    /Toast> <\n                                    />\n\n                                )\n                            }\n                        }\n\n                        export default DashboardHospital"]},"metadata":{},"sourceType":"module"}