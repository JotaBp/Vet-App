{"ast":null,"code":"var _jsxFileName = \"/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/pets/petsForm/PetForm.js\";\nimport React, { Component } from 'react';\nimport VetHospitalProfielService from '../../../../service/profile.service';\nimport PetService from '../../../../service/pet.service';\nimport FileService from '../../../../service/file.service';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass PetForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getVetHospitals = () => {\n      this.profileService.getOnlyVetHospital(this.state.profileInfo.id).then(response => this.setState({\n        profileInfo: response.data\n      })).catch(err => console.log(err));\n    };\n\n    this.componentDidMount = () => {\n      this.getDetailsProfile();\n    };\n\n    this.handleInputChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.petService.petCreate(this.state.petCreated).then(() => this.props.finishPetPost()).catch(err => console.log(err));\n    };\n\n    this.handleFileUpload = e => {\n      const uploadData = new FormData();\n      uploadData.append(\"petPicPath\", e.target.files[0]);\n      this.filesService.handleUpload(uploadData).then(response => {\n        console.log('Subida de archivo finalizada! La URL de Cloudinray es: ', response.data.secure_url);\n        this.setState({ ...this.state.petCreated,\n          petPicPath: response.data.secure_url // Cuidado con el petpicpath que va a petar por aqui\n\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      petCreated: {\n        name: '',\n        species: '',\n        // petPicPath: '',\n        breed: '',\n        owner: this.props.ownerID // vetHospital: ''\n\n      },\n      vetHospitals: ''\n    };\n    this.petService = new PetService();\n    this.filesService = new FileService();\n    this.ve;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"Nueva Mascota\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"nombre\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, \"Nombre\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"name\",\n      type: \"text\",\n      value: this.state.petCreated.name,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"especie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, \"Especie\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"species\",\n      type: \"text\",\n      value: this.state.petCreated.species,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"raza\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, \"Raza\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"breed\",\n      type: \"text\",\n      value: this.state.petCreated.breed,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: () => this.props.closeModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, \"Cerrar\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, \"Nueva mascota\")));\n  }\n\n}\n\nexport default PetForm;","map":{"version":3,"sources":["/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/pets/petsForm/PetForm.js"],"names":["React","Component","VetHospitalProfielService","PetService","FileService","Container","Form","Button","PetForm","constructor","props","getVetHospitals","profileService","getOnlyVetHospital","state","profileInfo","id","then","response","setState","data","catch","err","console","log","componentDidMount","getDetailsProfile","handleInputChange","e","name","value","target","handleSubmit","preventDefault","petService","petCreate","petCreated","finishPetPost","handleFileUpload","uploadData","FormData","append","files","filesService","handleUpload","secure_url","petPicPath","species","breed","owner","ownerID","vetHospitals","ve","render","closeModal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport VetHospitalProfielService from '../../../../service/profile.service'\nimport PetService from '../../../../service/pet.service'\nimport FileService from '../../../../service/file.service'\n\n\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\n\nclass PetForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            petCreated: {\n                name: '',\n                species: '',\n                // petPicPath: '',\n                breed: '',\n                owner: this.props.ownerID,\n                // vetHospital: ''\n            },\n            vetHospitals: ''\n\n        }\n        this.petService = new PetService()\n        this.filesService = new FileService()\n        this.ve\n    }\n\n    getVetHospitals = () => {\n        this.profileService.getOnlyVetHospital(this.state.profileInfo.id)\n            .then(response => this.setState({ profileInfo: response.data }))\n            .catch(err => console.log(err))\n    }\n\n\n    componentDidMount = () => {\n        this.getDetailsProfile()\n    }\n\n    // displayHospitals = () => {\n    //     return \n    // }\n\n\n\n    handleInputChange = e => {\n        const { name, value } = e.target\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.petService.petCreate(this.state.petCreated)\n            .then(() => this.props.finishPetPost())\n            .catch(err => console.log(err))\n    }\n\n    handleFileUpload = e => {\n\n        const uploadData = new FormData()\n        uploadData.append(\"petPicPath\", e.target.files[0])\n        this.filesService.handleUpload(uploadData)\n            .then(response => {\n                console.log('Subida de archivo finalizada! La URL de Cloudinray es: ', response.data.secure_url)\n                this.setState({\n                    ...this.state.petCreated, petPicPath: response.data.secure_url // Cuidado con el petpicpath que va a petar por aqui\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n\n\n        return (\n            <Container>\n\n                <h1>Nueva Mascota</h1>\n                <hr></hr>\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group controlId=\"nombre\">\n                        <Form.Label>Nombre</Form.Label>\n                        <Form.Control name=\"name\" type=\"text\" value={this.state.petCreated.name} onChange={this.handleInputChange} />\n                    </Form.Group>\n                    <Form.Group controlId=\"especie\">\n                        <Form.Label>Especie</Form.Label>\n                        <Form.Control name=\"species\" type=\"text\" value={this.state.petCreated.species} onChange={this.handleInputChange} />\n                    </Form.Group>\n                    <Form.Group controlId=\"raza\">\n                        <Form.Label>Raza</Form.Label>\n                        <Form.Control name=\"breed\" type=\"text\" value={this.state.petCreated.breed} onChange={this.handleInputChange} />\n                    </Form.Group>\n\n                    {/* <Form.Group controlId=\"img\">\n                        <Form.Label>Foto de tu mascota</Form.Label>\n                        <Form.Control name=\"petPicPath\" type=\"file\" value={this.state.petCreated.petPicPath} onChange={this.handleFileUpload} />\n                    </Form.Group> */}\n\n                    {/* <Form.Group controlId=\"select-hospital\">\n                        <Form.Label>Selecciona hospital</Form.Label>\n                        <Form.Control as=\"select\" name=\"vetHospital\" value={this.state.petCreated.vetHospital} onChange={this.handleInputChange} >\n                            <option>Seleccionar</option>\n                            {this.displayHospitals()}\n                        </Form.Control>\n                    </Form.Group> */}\n\n                    <Button variant=\"dark\" onClick={() => this.props.closeModal()}>Cerrar</Button>\n                    <Button variant=\"dark\" type=\"submit\">Nueva mascota</Button>\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default PetForm"]},"metadata":{},"sourceType":"module"}