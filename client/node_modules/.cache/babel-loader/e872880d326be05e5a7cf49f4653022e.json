{"ast":null,"code":"var _jsxFileName = \"/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/dashboard/dashboardClient/DashboardClient.js\";\nimport React, { Component } from 'react';\nimport './DashboardCliente.css';\nimport PetForm from '../../pets/petsForm/PetForm';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Toast from 'react-bootstrap/Toast';\nimport Modal from 'react-bootstrap/Modal';\nimport PetCardClient from '../../pets/petCardClient/PetCardClient';\nimport PetService from '../../../../service/pet.service';\n\nclass DashboardClient extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleModal = visible => this.setState({\n      modalShow: visible\n    });\n\n    this.handletoast = (visible, text = '') => {\n      const toastCopy = { ...this.state.toast\n      };\n      toastCopy.show = visible;\n      toastCopy.text = text;\n      this.setState({\n        toast: toastCopy\n      });\n    };\n\n    this.getPetsFromClient = () => {\n      this.petService.getPetsFromClient(this.state.userInfo.id).then(response => {\n        console.log(response.data);\n        return this.setState({\n          userInfo: {\n            pets: response.data\n          }\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.finishPetCreate = () => {\n      this.getPetsFromClient();\n      this.handleModal(false);\n      this.handletoast(true, 'Has creado una nueva mascota');\n    };\n\n    this.componentDidMount = () => {\n      this.getPetsFromClient();\n    };\n\n    this.state = {\n      userInfo: {\n        id: this.props.loggedInUser._id,\n        pets: []\n      },\n      toast: {\n        show: false,\n        text: ''\n      },\n      modalShow: false\n    };\n    this.petService = new PetService();\n  }\n\n  render() {\n    console.log(this.state.userInfo.pets);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      as: \"section\",\n      className: \"content-dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleModal(true),\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"Crear nueva mascota\"), this.state.userInfo.pets && this.state.userInfo.pets.map(pet => {\n      console.log(pet._id);\n      return /*#__PURE__*/React.createElement(PetCardClient, Object.assign({\n        key: pet._id\n      }, pet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 28\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(Modal, {\n      className: \"modal-window\",\n      show: this.state.modalShow,\n      onHide: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(PetForm, {\n      finishPetPost: this.finishPetCreate,\n      ownerID: this.props.loggedInUser._id,\n      closeModal: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Toast, {\n      onClose: () => this.handletoast(false),\n      show: this.state.toast.show,\n      delay: 3000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Toast.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, \"Mensaje\")), /*#__PURE__*/React.createElement(Toast.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, this.state.toast.text)));\n  }\n\n}\n\nexport default DashboardClient;","map":{"version":3,"sources":["/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/dashboard/dashboardClient/DashboardClient.js"],"names":["React","Component","PetForm","Container","Button","Toast","Modal","PetCardClient","PetService","DashboardClient","constructor","props","handleModal","visible","setState","modalShow","handletoast","text","toastCopy","state","toast","show","getPetsFromClient","petService","userInfo","id","then","response","console","log","data","pets","catch","err","finishPetCreate","componentDidMount","loggedInUser","_id","render","map","pet"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport './DashboardCliente.css'\n\nimport PetForm from '../../pets/petsForm/PetForm'\n\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Toast from 'react-bootstrap/Toast'\nimport Modal from 'react-bootstrap/Modal'\n\nimport PetCardClient from '../../pets/petCardClient/PetCardClient'\n\nimport PetService from '../../../../service/pet.service'\n\n\nclass DashboardClient extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { \n            userInfo: {\n                id: this.props.loggedInUser._id,\n                pets: []\n            },\n            toast: {\n                show: false,\n                text: ''\n            },\n            modalShow: false,\n\n        }\n\n        this.petService = new PetService()\n\n\n    }\n\n    handleModal = visible => this.setState({ modalShow: visible })\n    handletoast = (visible, text = '') => {\n        const toastCopy = { ...this.state.toast }\n        toastCopy.show = visible\n        toastCopy.text = text\n        this.setState({ toast: toastCopy })\n    }\n\n    getPetsFromClient = () => {\n        this.petService.getPetsFromClient(this.state.userInfo.id)\n            .then(response => { console.log(response.data)\n                return this.setState({ userInfo: { pets: response.data }})})\n            .catch(err => console.log(err))\n    }\n    \n    finishPetCreate = () => {\n        this.getPetsFromClient()\n        this.handleModal(false)\n        this.handletoast(true, 'Has creado una nueva mascota')\n    }\n\n    componentDidMount = () => {\n        this.getPetsFromClient()\n    }\n\n\n    render() {\n\n        console.log(this.state.userInfo.pets)\n\n\n        return (\n            <>\n\n                <Container as=\"section\"  className=\"content-dashboard\">\n\n                <Button onClick={() => this.handleModal(true)} variant=\"dark\">Crear nueva mascota</Button>\n\n                \n                {this.state.userInfo.pets && this.state.userInfo.pets.map(pet =>  { console.log(pet._id)\n                    return(<PetCardClient key={pet._id} {...pet} />)})}\n\n                </Container>\n\n                <Modal className=\"modal-window\" show={this.state.modalShow} onHide={() => this.handleModal(false)}>\n                    <Modal.Body>\n                        <PetForm finishPetPost={this.finishPetCreate} ownerID={this.props.loggedInUser._id} closeModal={() => this.handleModal(false)} />\n                    </Modal.Body>\n                </Modal>\n\n                <Toast onClose={() => this.handletoast(false)} show={this.state.toast.show} delay={3000} >\n                    <Toast.Header>\n\n                        <strong className=\"mr-auto\">Mensaje</strong>\n                    </Toast.Header>\n                    <Toast.Body>{this.state.toast.text}</Toast.Body>\n                </Toast>\n\n\n\n            </>\n\n        )\n    }\n}\n\nexport default DashboardClient"]},"metadata":{},"sourceType":"module"}