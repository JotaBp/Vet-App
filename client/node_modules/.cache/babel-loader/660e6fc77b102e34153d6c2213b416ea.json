{"ast":null,"code":"var _jsxFileName = \"/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport './Dashboard.css';\nimport CiteService from './../../../service/cite.service';\nimport CiteCard from '../cites/CiteCard';\nimport QueryCard from '../query/QueryCard';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Figure from 'react-bootstrap/Figure';\nimport FigureImage from 'react-bootstrap/FigureImage';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getCitesInfo = () => {\n      this.citeService.citesFromUser(this.props.loggedInUser._id).then(response => this.setState({\n        cites: response.data\n      })).catch(err => console.log(err));\n    };\n\n    this.componentDidMount = () => {\n      this.getCitesInfo();\n    };\n\n    this.state = {\n      userInfo: {\n        querys: [],\n        cites: []\n      }\n    };\n    this.citeService = new CiteService();\n  }\n\n  render() {\n    console.log(this.props.loggedInUser._id);\n    console.log(this.state.cites);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      as: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(Container, {\n      as: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"Citas\"), this.state.cites && this.state.cites.map(cite => /*#__PURE__*/React.createElement(CiteCard, Object.assign({\n      key: cite._id\n    }, cite, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 72\n      }\n    })))), /*#__PURE__*/React.createElement(Container, {\n      as: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/dashboard/Dashboard.js"],"names":["React","Component","CiteService","CiteCard","QueryCard","Container","Row","Col","Figure","FigureImage","Form","Button","Link","Dashboard","constructor","props","getCitesInfo","citeService","citesFromUser","loggedInUser","_id","then","response","setState","cites","data","catch","err","console","log","componentDidMount","state","userInfo","querys","render","map","cite"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Dashboard.css'\n\nimport CiteService from './../../../service/cite.service'\n\nimport CiteCard from '../cites/CiteCard'\nimport QueryCard from '../query/QueryCard'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Figure from 'react-bootstrap/Figure'\nimport FigureImage from 'react-bootstrap/FigureImage'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport { Link } from 'react-router-dom'\n\n\nclass Dashboard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { \n            userInfo: {\n                querys: [],\n                cites: []\n            }\n            \n\n        }\n        this.citeService = new CiteService()\n    }\n\n    getCitesInfo = () => {\n        this.citeService.citesFromUser(this.props.loggedInUser._id)\n            .then(response => this.setState({ cites: response.data }))\n            .catch(err => console.log(err))\n    }\n\n\n    componentDidMount = () => {\n        this.getCitesInfo()\n    }\n\n\n    render() {\n\n        console.log(this.props.loggedInUser._id)\n        console.log(this.state.cites)\n\n        return (\n            <>\n                <Container as=\"section\" >\n                    <Row>\n                        <Col>\n                            {/* utilizar con estos botones un renderizado condicional\n                         segun el role del usuario */}\n                            <Button></Button>\n\n                        </Col>\n                        <Col>\n                            <Button></Button>\n\n                        </Col>\n                        <Col>\n                            <Button></Button>\n                        </Col>\n\n                    </Row>\n                </Container>\n\n                <Container as=\"section\" >\n\n                <h1>Citas</h1>\n\n\n                    {this.state.cites && this.state.cites.map(cite =>  <CiteCard key={cite._id} {...cite} />)}\n\n\n                </Container>\n\n                <Container as=\"section\" >\n\n                    {/* {this.state.query && this.state.query.map(query => <QueryCard key={query._id} {...query} />)} */}\n\n\n                </Container>\n            </>\n\n        )\n    }\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}