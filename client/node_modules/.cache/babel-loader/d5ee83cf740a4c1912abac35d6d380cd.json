{"ast":null,"code":"var _jsxFileName = \"/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/pets/petCardClient/PetCardClient.js\";\nimport React, { Component } from 'react';\nimport './PetCardClient.css';\nimport CiteService from '../../../../service/cite.service';\nimport QueryService from '../../../../service/query.service';\nimport PetService from '../../../../service/pet.service';\nimport UpdateFormPets from '../updatePets/UpdateFormPets';\nimport QueryForm from '../../query/queryForm/QueryForm';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Modal from 'react-bootstrap/Modal';\nimport Toast from 'react-bootstrap/Toast';\n\nclass PetCardClient extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleModal = (visible, modalName) => this.setState({\n      modal: {\n        show: visible,\n        name: modalName\n      }\n    });\n\n    this.handletoast = (visible, text = '') => {\n      const toastCopy = { ...this.state.toast\n      };\n      toastCopy.show = visible;\n      toastCopy.text = text;\n      this.setState({\n        toast: toastCopy\n      });\n    };\n\n    this.displayModal = modalName => {\n      if (this.state.modal.show) {\n        switch (modalName) {\n          case \"createQuery\":\n            return /*#__PURE__*/React.createElement(Modal.Body, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(QueryForm, {\n              finishQueryCreate: this.finishQueryPost,\n              petId: this.state.petInfo.id,\n              hospitalArr: this.props.vetHospital,\n              closeModal: () => this.handleModal(false),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 29\n              }\n            }));\n\n          case \"editPet\":\n            return /*#__PURE__*/React.createElement(Modal.Body, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(UpdateFormPets, {\n              closeModal: () => this.handleModal(false),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 25\n              }\n            })) // <EditProject\n            //     {...this.state}\n            //     loggedInUser={this.state.loggedInUser}\n            //     finishProject={this.finishProject}\n            //     closeModal={() => this.handleModal(false)}\n            // />\n            ;\n\n          default:\n            return null;\n        }\n      }\n    };\n\n    this.getQuerysInfo = () => {\n      this.queryService.queryFromPet(this.props._id).then(response => {\n        return this.setState({\n          querys: response.data\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.getCitesInfo = () => {\n      this.citeService.citesFromPet(this.props._id).then(response => this.setState({\n        cites: response.data\n      })).catch(err => console.log(err));\n    };\n\n    this.handleDelete = petId => {\n      this.petService.deletePet(petId).then(() => this.props.reloadPets()).catch(err => console.log(err));\n    };\n\n    this.finishQueryPost = () => {\n      this.getQuerysInfo();\n      this.handleModal(false);\n      this.handletoast(true, 'Consulta enviada al Hospital');\n    };\n\n    this.componentDidMount = () => {\n      this.getQuerysInfo();\n      this.getCitesInfo();\n    };\n\n    this.state = {\n      petInfo: {\n        id: this.props._id,\n        petPicPath: this.props.petPicPath,\n        name: this.props.name,\n        species: this.props.species,\n        breed: this.props.breed,\n        vetHospital: this.props.vetHospital\n      },\n      cites: \"\",\n      querys: \"\",\n      toast: {\n        show: false,\n        text: ''\n      },\n      modal: {\n        show: false,\n        name: ''\n      } // modalShow: false,\n\n    };\n    this.citeService = new CiteService();\n    this.queryService = new QueryService();\n    this.petService = new PetService();\n  } // handleModal = visible => this.setState({ modalShow: visible })\n\n\n  //Falla el delete y el create, se crean y se eliminan los registros, pero no se actuliza la pagina en el momento en el que se produce la accion\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      as: \"section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      as: \"article\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      variant: \"top\",\n      src: this.state.petInfo.petPicPath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Card.Header, {\n      as: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    }, this.state.petInfo.name), /*#__PURE__*/React.createElement(Button, {\n      className: \"delete-button\",\n      onClick: () => this.handleDelete(this.state.petInfo.id),\n      variant: \"danger\",\n      size: \"md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 33\n      }\n    }, \"Eliminar mascota\"), /*#__PURE__*/React.createElement(ListGroup, {\n      className: \"list-group-flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }\n    }, this.state.petInfo.species), /*#__PURE__*/React.createElement(ListGroup.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 37\n      }\n    }, this.state.petInfo.breed)), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"query\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 33\n      }\n    }, \"Consultas\"), this.state.querys && this.state.querys.map(query => {\n      return /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"body\",\n        key: query._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 45\n        }\n      }, query.subject), /*#__PURE__*/React.createElement(Card.Subtitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 45\n        }\n      }, query.date), /*#__PURE__*/React.createElement(Card.Text, {\n        as: \"p\",\n        className: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 45\n        }\n      }, query.description), query.citeHospital && /*#__PURE__*/React.createElement(Card, {\n        style: {\n          display: query.citeHospital.description ? 'block' : 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 68\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        as: \"h5\",\n        className: \"card-title-response\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 49\n        }\n      }, \"Respuesta\"), /*#__PURE__*/React.createElement(Card.Text, {\n        as: \"p\",\n        className: \"card-text-response\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 49\n        }\n      }, query.citeHospital.description)));\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"cite\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 33\n      }\n    }, \"Citas\"), this.state.cites && this.state.cites.map(cite => {\n      return /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"body\",\n        key: cite._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 45\n        }\n      }, cite.subject), /*#__PURE__*/React.createElement(Card.Subtitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 45\n        }\n      }, cite.date), /*#__PURE__*/React.createElement(Card.Text, {\n        as: \"p\",\n        className: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 45\n        }\n      }, cite.description));\n    }), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleModal(true, \"createQuery\"),\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 37\n      }\n    }, \"Crear Consulta para \", this.state.petInfo.name), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleModal(true, \"editPet\"),\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 37\n      }\n    }, \"Actualizar mascota \", this.state.petInfo.name)))))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.modal.show,\n      onHide: () => this.handleModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, this.displayModal(this.state.modal.name)), /*#__PURE__*/React.createElement(Toast, {\n      className: \"toast-window\",\n      onClose: () => this.handletoast(false),\n      show: this.state.toast.show,\n      delay: 3000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Toast.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }\n    }, \"Mensaje\")), /*#__PURE__*/React.createElement(Toast.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    }, this.state.toast.text)));\n  }\n\n}\n\nexport default PetCardClient;","map":{"version":3,"sources":["/home/jotabp94/Documentos/Ironhack/Curso/Semana 8/Vet-App/client/src/components/pages/pets/petCardClient/PetCardClient.js"],"names":["React","Component","CiteService","QueryService","PetService","UpdateFormPets","QueryForm","Container","Row","Col","Card","Button","ListGroup","Modal","Toast","PetCardClient","constructor","props","handleModal","visible","modalName","setState","modal","show","name","handletoast","text","toastCopy","state","toast","displayModal","finishQueryPost","petInfo","id","vetHospital","getQuerysInfo","queryService","queryFromPet","_id","then","response","querys","data","catch","err","console","log","getCitesInfo","citeService","citesFromPet","cites","handleDelete","petId","petService","deletePet","reloadPets","componentDidMount","petPicPath","species","breed","render","map","query","subject","date","description","citeHospital","display","cite"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport './PetCardClient.css'\n\nimport CiteService from '../../../../service/cite.service'\nimport QueryService from '../../../../service/query.service'\nimport PetService from '../../../../service/pet.service'\n\nimport UpdateFormPets from '../updatePets/UpdateFormPets'\nimport QueryForm from '../../query/queryForm/QueryForm'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Modal from 'react-bootstrap/Modal'\nimport Toast from 'react-bootstrap/Toast'\n\n\nclass PetCardClient extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n\n            petInfo: {\n                id: this.props._id,\n                petPicPath: this.props.petPicPath,\n                name: this.props.name,\n                species: this.props.species,\n                breed: this.props.breed,\n                vetHospital: this.props.vetHospital,\n\n            },\n            cites: \"\",\n            querys: \"\",\n\n\n            toast: {\n                show: false,\n                text: ''\n            },\n            modal: {\n                show: false,\n                name: ''\n            }\n            // modalShow: false,\n            \n        }\n        this.citeService = new CiteService()\n        this.queryService = new QueryService()\n        this.petService = new PetService()\n\n    }\n\n    // handleModal = visible => this.setState({ modalShow: visible })\n\n    handleModal = (visible, modalName) => this.setState({ modal: {show: visible, name: modalName} })\n\n    handletoast = (visible, text = '') => {\n        const toastCopy = { ...this.state.toast }\n        toastCopy.show = visible\n        toastCopy.text = text\n        this.setState({ toast: toastCopy })\n    }\n\n    displayModal = (modalName) => {\n        if (this.state.modal.show) {\n            switch (modalName) {\n                case \"createQuery\":\n                    return (\n                        <Modal.Body>\n                            <QueryForm \n                                finishQueryCreate={this.finishQueryPost} \n                                petId={this.state.petInfo.id} \n                                hospitalArr={this.props.vetHospital} \n                                closeModal={() => this.handleModal(false)} />\n                        </Modal.Body>\n                    )\n                case \"editPet\":\n                    return (<Modal.Body>\n                        <UpdateFormPets closeModal={() => this.handleModal(false)} />\n                        </Modal.Body>\n                        // <EditProject\n                        //     {...this.state}\n                        //     loggedInUser={this.state.loggedInUser}\n                        //     finishProject={this.finishProject}\n                        //     closeModal={() => this.handleModal(false)}\n                        // />\n                        \n                    )\n                default:\n                    return null\n            }\n        }\n    }\n\n    getQuerysInfo = () => {\n        this.queryService.queryFromPet(this.props._id)\n            .then(response => {\n                return this.setState({ querys: response.data })\n            })\n            .catch(err => console.log(err))\n    }\n\n    getCitesInfo = () => {\n        this.citeService.citesFromPet(this.props._id)\n            .then(response => this.setState({ cites: response.data }))\n            .catch(err => console.log(err))\n    }\n\n    handleDelete = (petId) => {\n        this.petService.deletePet(petId)\n            .then(() => this.props.reloadPets())\n            .catch(err => console.log(err))\n    }\n\n    finishQueryPost = () => {\n        this.getQuerysInfo()\n        this.handleModal(false)\n        this.handletoast(true, 'Consulta enviada al Hospital')\n    }\n\n    componentDidMount = () => {\n        this.getQuerysInfo()\n        this.getCitesInfo()\n    }\n\n    //Falla el delete y el create, se crean y se eliminan los registros, pero no se actuliza la pagina en el momento en el que se produce la accion\n\n\n    render() {\n\n        console.log(this.props)\n\n        return (\n            <>\n                <Container as=\"section\">\n\n\n                    <Row>\n                        <Col as=\"article\">\n                            <Card className=\"card\">\n                                <Card.Img variant=\"top\" src={this.state.petInfo.petPicPath} />\n\n                                <Card.Header as=\"h5\">{this.state.petInfo.name}</Card.Header>\n                                <Button className=\"delete-button\" onClick={() => this.handleDelete(this.state.petInfo.id)} variant=\"danger\" size=\"md\">Eliminar mascota</Button>\n\n                                <ListGroup className=\"list-group-flush\">\n                                    <ListGroup.Item>{this.state.petInfo.species}</ListGroup.Item>\n                                    <ListGroup.Item>{this.state.petInfo.breed}</ListGroup.Item>\n                                </ListGroup>\n\n                                <h4 className=\"query\" >Consultas</h4>\n\n                                {this.state.querys && this.state.querys.map(query => {\n\n\n                                    return (\n\n                                        <Card.Body className=\"body\" key={query._id}>\n                                            <Card.Title>{query.subject}</Card.Title>\n                                            <Card.Subtitle>{query.date}</Card.Subtitle>\n                                            <Card.Text as=\"p\" className=\"card-text\">{query.description}</Card.Text>\n                                            {query.citeHospital && <Card style={{ display: query.citeHospital.description ? 'block' : 'none' }}>\n\n                                                <Card.Title as=\"h5\" className=\"card-title-response\">Respuesta</Card.Title>\n                                                <Card.Text as=\"p\" className=\"card-text-response\">{query.citeHospital.description}</Card.Text>\n\n                                            </Card>}\n                                        </Card.Body>\n                                    )\n                                })}\n\n                                <h4 className=\"cite\">Citas</h4>\n\n                                {this.state.cites && this.state.cites.map(cite => {\n\n\n                                    return (\n                                        <Card.Body className=\"body\" key={cite._id}>\n                                            <Card.Title>{cite.subject}</Card.Title>\n                                            <Card.Subtitle>{cite.date}</Card.Subtitle>\n                                            <Card.Text as=\"p\" className=\"card-text\">{cite.description}</Card.Text>\n                                        </Card.Body>\n                                    )\n                                })}\n\n\n                                <Card.Footer>\n                                    <Button onClick={() => this.handleModal(true, \"createQuery\")} variant=\"dark\" >Crear Consulta para {this.state.petInfo.name}</Button>\n                                    <Button onClick={() => this.handleModal(true, \"editPet\")} variant=\"dark\" >Actualizar mascota {this.state.petInfo.name}</Button>\n\n\n                                </Card.Footer>\n                            </Card>\n\n                        </Col>\n\n                    </Row>\n\n                </Container>\n\n                {/* <Modal className=\"modal-window\" show={this.state.modalShow} onHide={() => this.handleModal(false)}>\n                    <Modal.Body>\n                        <QueryForm finishQueryCreate={this.finishQueryPost} petId={this.state.petInfo.id} hospitalArr={this.props.vetHospital} closeModal={() => this.handleModal(false)} />\n                    </Modal.Body>\n                </Modal> */}\n\n                <Modal show={this.state.modal.show} onHide={() => this.handleModal(false)}>\n                    {this.displayModal(this.state.modal.name)}\n                </Modal>\n\n                <Toast className=\"toast-window\" onClose={() => this.handletoast(false)} show={this.state.toast.show} delay={3000} >\n                    <Toast.Header>\n                        <strong className=\"mr-auto\">Mensaje</strong>\n                    </Toast.Header>\n                    <Toast.Body>{this.state.toast.text}</Toast.Body>\n                </Toast>\n\n            </>\n        )\n    }\n}\n\nexport default PetCardClient\n\n\n\n"]},"metadata":{},"sourceType":"module"}